/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

plugins {
    id 'com.mkobit.jenkins.pipelines.shared-library' version '0.10.1'
    id 'java'
    id 'groovy'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    maven { url 'https://mvnrepository.com/artifact/' }
    mavenLocal()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.14', ext: 'pom'
    implementation group: 'com.cloudbees', name: 'groovy-cps', version: '1.31'
    testImplementation group: 'org.yaml', name: 'snakeyaml', version: '2.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.4.1'
    testImplementation group: 'com.lesfurets', name:'jenkins-pipeline-unit', version: '1.13'
    testImplementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'
}

configurations.all {
    resolutionStrategy {
        force group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
        force group: 'commons-codec', name: 'commons-codec', version: '1.15'
        force group: 'com.google.protobuf', name: 'protobuf-java', version: '3.21.7'
        force group: 'org.springframework.security', name: 'spring-security-web', version: '6.4.6'
        force group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.18.0'
        force group: 'org.checkerframework', name: 'checker-qual', version: '3.33.0'
        force group: 'com.google.j2objc', name: 'j2objc-annotations', version: '2.8'
        force group: 'org.jenkins-ci.plugins', name: 'durable-task', version: '587.v84b_877235b_45'
    }
}

sourceSets {
    main {
        groovy {
            srcDirs = ['jenkins']
        }
    }

    test {
        groovy {
            srcDirs = ['tests/jenkins']
        }
    }

}

sharedLibrary {
    coreVersion = '2.492.3' // https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-core/
    testHarnessVersion = '2457.vb_7281b_a_d62e8' // https://mvnrepository.com/artifact/org.jenkins-ci.main/jenkins-test-harness?repo=jenkins-releases
    pluginDependencies {
        // see https://mvnrepository.com/artifact/org.jenkins-ci.plugins/<name>?repo=jenkins-releases for latest
        workflowCpsGlobalLibraryPluginVersion = '609.vd95673f149b_b'
        dependency('io.jenkins.plugins', 'pipeline-groovy-lib', '752.vdddedf804e72')
        dependency('org.jenkins-ci.plugins.workflow', 'workflow-multibranch', '806.vb_b_688f609ee9')
        dependency('org.jenkins-ci.plugins', 'pipeline-input-step', '527.vd61b_1d3c5078') // https://repo.jenkins-ci.org/public/org/jenkins-ci/plugins/pipeline-input-step/
        dependency('org.jenkins-ci.plugins', 'script-security', '1373.vb_b_4a_a_c26fa_00')
        dependency('org.jenkins-ci.plugins', 'credentials', '1415.v831096eb_5534')
        dependency('org.jenkins-ci.plugins', 'git-client', '6.2.0')
        dependency('org.apache.sshd', 'sshd-core', '2.15.0')
        dependency('org.jenkins-ci.plugins', 'junit', '1335.v6b_a_a_e18534e1')
        dependency('org.jenkins-ci.plugins', 'mailer', '509.vc54d23fc427e') // https://repo.jenkins-ci.org/public/org/jenkins-ci/plugins/mailer/
    }
}

// Configure tasks to use Java 17
tasks.withType(JavaCompile) {
    options.release = 17
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

test {
    testLogging {
		events "failed"
		exceptionFormat "full"
    }
    if (project.hasProperty('pipeline.stack.write')) {
        systemProperty 'pipeline.stack.write', project.getProperty('pipeline.stack.write')
    }
}
