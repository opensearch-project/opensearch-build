   release-notes-check.run()
      release-notes-check.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      release-notes-check.library({identifier=jenkins@1.0.4, retriever=null})
      release-notes-check.pipeline(groovy.lang.Closure)
         release-notes-check.timeout({time=2, unit=HOURS})
         release-notes-check.echo(Executing on agent [label:none])
         release-notes-check.stage(detect docker image + args, groovy.lang.Closure)
            release-notes-check.echo(Executing on agent [docker:[alwaysPull:true, args:, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, image:docker/library/alpine:3, reuseNode:false, registryUrl:https://public.ecr.aws/, stages:[:]]])
            release-notes-check.script(groovy.lang.Closure)
               release-notes-check.detectDockerAgent()
                  detectDockerAgent.legacySCM(groovy.lang.Closure)
                  detectDockerAgent.library({identifier=jenkins@1.0.4, retriever=null})
                  detectDockerAgent.readYaml({file=manifests/3.0.0/opensearch-3.0.0.yml})
                  InputManifest.asBoolean()
                  detectDockerAgent.echo(Using Docker image opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3 (-e JAVA_HOME=/opt/java/openjdk-21))
                  detectDockerAgent.echo(Using java version openjdk-21)
         release-notes-check.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         release-notes-check.stage(Parameters Check, groovy.lang.Closure)
            release-notes-check.script(groovy.lang.Closure)
         release-notes-check.stage(Generate MarkDown table, groovy.lang.Closure)
            release-notes-check.echo(Executing on agent [docker:[alwaysPull:true, args:, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, registryUrl:https://public.ecr.aws/, stages:[:]]])
            release-notes-check.script(groovy.lang.Closure)
               release-notes-check.usernamePassword({credentialsId=jenkins-github-bot-token, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
               release-notes-check.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                  release-notes-check.sh(
                                #!/bin/bash
                                set +e
                                ./release_notes.sh check manifests/${INPUT_MANIFEST} --date ${GIT_LOG_DATE} --output table.md
                                echo "Adding Comment on issue $GIT_ISSUE_NUMBER"
                                gh repo clone https://github.com/opensearch-project/opensearch-build.git; cd opensearch-build
                                gh issue comment ${GIT_ISSUE_NUMBER} --body-file ../table.md --repo opensearch-project/opensearch-build
                            )
         release-notes-check.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
