   docker-ecr-promote.run()
      docker-ecr-promote.legacySCM(groovy.lang.Closure)
      docker-ecr-promote.library({identifier=jenkins@20211123, retriever=null})
      docker-ecr-promote.pipeline(groovy.lang.Closure)
         docker-ecr-promote.timeout({time=1, unit=HOURS})
         docker-ecr-promote.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk14, reuseNode:false, stages:[:], args:-u root, alwaysPull:false, containerPerStageRoot:false, label:Jenkins-Agent-al2-x64-c54xlarge-Docker-Host]])
         docker-ecr-promote.echo(Skipping stage dockerhub-promote-to-prod)
         docker-ecr-promote.stage(ecr-promote-to-prod, groovy.lang.Closure)
            docker-ecr-promote.script(groovy.lang.Closure)
               docker-ecr-promote.copyECRContainer({imageRepository=ci-runner-staging, imageTag=2.0.0, latestTag=true, majorVersionTag=true, minorVersionTag=true})
                  copyECRContainer.sh({script=test -f /usr/local/bin/gcrane && echo '1' || echo '0' , returnStdout=true})
                  copyECRContainer.sh(docker logout)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=aws_account_artifact, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/ci-runner-staging:2.0.0 public.ecr.aws/p5f6l6i3/ci-runner-staging:2.0.0
           )
                  copyECRContainer.echo(Tagging with latest for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=aws_account_artifact, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/ci-runner-staging:2.0.0 public.ecr.aws/p5f6l6i3/ci-runner-staging:latest
           )
                  copyECRContainer.echo(Tagging with its major version for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=aws_account_artifact, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/ci-runner-staging:2.0.0 public.ecr.aws/p5f6l6i3/ci-runner-staging:2
           )
                  copyECRContainer.echo(Tagging with its major and minor version for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=aws_account_artifact, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/ci-runner-staging:2.0.0 public.ecr.aws/p5f6l6i3/ci-runner-staging:2.0
           )
         docker-ecr-promote.script(groovy.lang.Closure)
            docker-ecr-promote.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            docker-ecr-promote.sh(docker logout)
