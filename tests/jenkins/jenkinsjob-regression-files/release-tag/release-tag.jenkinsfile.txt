   release-tag.run()
      release-tag.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      release-tag.library({identifier=jenkins@1.0.0, retriever=null})
      release-tag.pipeline(groovy.lang.Closure)
         release-tag.timeout({time=2, unit=HOURS})
         release-tag.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211130, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
         release-tag.stage(Create Release Tag, groovy.lang.Closure)
            release-tag.script(groovy.lang.Closure)
               release-tag.sh(curl -SLO https://artifacts.opensearch.org/releases/bundle/opensearch/1.1.0/opensearch-1.1.0-linux-x64.tar.gz && tar -xf opensearch-1.1.0-linux-x64.tar.gz opensearch-1.1.0/manifest.yml)
               release-tag.echo(The release distribution manifest is downloaded to tests/data/opensearch-build-1.1.0.yml)
               release-tag.createReleaseTag({distManifest=tests/data/opensearch-build-1.1.0.yml, tagVersion=1.1.0})
                  createReleaseTag.legacySCM(groovy.lang.Closure)
                  createReleaseTag.library({identifier=jenkins@main, retriever=null})
                  createReleaseTag.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  BundleManifest.asBoolean()
                  BundleManifest.getNames()
                  createReleaseTag.echo(Creating 1.1.0 release tag for 15 components in the manifest)
                  createReleaseTag.usernamePassword({credentialsId=dummy_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  createReleaseTag.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     BundleManifest.getCommitId(index-management)
                     BundleManifest.getRepo(index-management)
                     createReleaseTag.echo(Tagging index-management at 7897e9ae9cd5b49535e6a8bbf4c2f73cb458af24 ...)
                     createReleaseTag.dir(index-management, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=7897e9ae9cd5b49535e6a8bbf4c2f73cb458af24}], userRemoteConfigs=[{url=https://github.com/opensearch-project/index-management.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/index-management.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Tag 1.1.0.0 has been created with identical commit ID. Skipping creating new tag for index-management.)
                     BundleManifest.getCommitId(job-scheduler)
                     BundleManifest.getRepo(job-scheduler)
                     createReleaseTag.echo(Tagging job-scheduler at 4504dabfc67dd5628c1451e91e9a1c3c4ca71525 ...)
                     createReleaseTag.dir(job-scheduler, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=4504dabfc67dd5628c1451e91e9a1c3c4ca71525}], userRemoteConfigs=[{url=https://github.com/opensearch-project/job-scheduler.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/job-scheduler.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for job-scheduler)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/job-scheduler.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/job-scheduler.git 1.1.0.0)
                     BundleManifest.getCommitId(anomaly-detection)
                     BundleManifest.getRepo(anomaly-detection)
                     createReleaseTag.echo(Tagging anomaly-detection at bedc5b620384163abe272e913705fa23cfd3b3a3 ...)
                     createReleaseTag.dir(anomaly-detection, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=bedc5b620384163abe272e913705fa23cfd3b3a3}], userRemoteConfigs=[{url=https://github.com/opensearch-project/anomaly-detection.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/anomaly-detection.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for anomaly-detection)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/anomaly-detection.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/anomaly-detection.git 1.1.0.0)
                     BundleManifest.getCommitId(performance-analyzer)
                     BundleManifest.getRepo(performance-analyzer)
                     createReleaseTag.echo(Tagging performance-analyzer at f184f0bc39302ac38af2585c663d619048f6cffe ...)
                     createReleaseTag.dir(performance-analyzer, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=f184f0bc39302ac38af2585c663d619048f6cffe}], userRemoteConfigs=[{url=https://github.com/opensearch-project/performance-analyzer.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/performance-analyzer.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for performance-analyzer)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/performance-analyzer.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/performance-analyzer.git 1.1.0.0)
                     BundleManifest.getCommitId(common-utils)
                     BundleManifest.getRepo(common-utils)
                     createReleaseTag.echo(Tagging common-utils at 3913d7097934cbfe1fdcf919347f22a597d00b76 ...)
                     createReleaseTag.dir(common-utils, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=3913d7097934cbfe1fdcf919347f22a597d00b76}], userRemoteConfigs=[{url=https://github.com/opensearch-project/common-utils.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/common-utils.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for common-utils)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/common-utils.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/common-utils.git 1.1.0.0)
                     BundleManifest.getCommitId(asynchronous-search)
                     BundleManifest.getRepo(asynchronous-search)
                     createReleaseTag.echo(Tagging asynchronous-search at aa344cc1ecdf9ad21d6cb8d9e368361e6a0f3132 ...)
                     createReleaseTag.dir(asynchronous-search, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=aa344cc1ecdf9ad21d6cb8d9e368361e6a0f3132}], userRemoteConfigs=[{url=https://github.com/opensearch-project/asynchronous-search.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/asynchronous-search.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for asynchronous-search)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/asynchronous-search.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/asynchronous-search.git 1.1.0.0)
                     BundleManifest.getCommitId(dashboards-notebooks)
                     BundleManifest.getRepo(dashboards-notebooks)
                     createReleaseTag.echo(Tagging dashboards-notebooks at 5a996eb8ec8c92e7469cd5e5f87b237352f60f61 ...)
                     createReleaseTag.dir(dashboards-notebooks, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=5a996eb8ec8c92e7469cd5e5f87b237352f60f61}], userRemoteConfigs=[{url=https://github.com/opensearch-project/dashboards-notebooks.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/dashboards-notebooks.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for dashboards-notebooks)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-notebooks.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-notebooks.git 1.1.0.0)
                     BundleManifest.getCommitId(OpenSearch)
                     BundleManifest.getRepo(OpenSearch)
                     createReleaseTag.echo(Tagging OpenSearch at b7334f49d530ffd1a3f7bd0e5832b9b2a9caa583 ...)
                     createReleaseTag.dir(OpenSearch, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=b7334f49d530ffd1a3f7bd0e5832b9b2a9caa583}], userRemoteConfigs=[{url=https://github.com/opensearch-project/OpenSearch.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/OpenSearch.git 1.1.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0 tag for OpenSearch)
                        createReleaseTag.sh(git tag 1.1.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/OpenSearch.git 1.1.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/OpenSearch.git 1.1.0)
                     BundleManifest.getCommitId(sql)
                     BundleManifest.getRepo(sql)
                     createReleaseTag.echo(Tagging sql at d68547d585092af1e053d01e1b834259723cd304 ...)
                     createReleaseTag.dir(sql, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=d68547d585092af1e053d01e1b834259723cd304}], userRemoteConfigs=[{url=https://github.com/opensearch-project/sql.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/sql.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for sql)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/sql.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/sql.git 1.1.0.0)
                     BundleManifest.getCommitId(alerting)
                     BundleManifest.getRepo(alerting)
                     createReleaseTag.echo(Tagging alerting at 8024b8b9195f837e49e5bebd7f4a31dfc333eb4d ...)
                     createReleaseTag.dir(alerting, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=8024b8b9195f837e49e5bebd7f4a31dfc333eb4d}], userRemoteConfigs=[{url=https://github.com/opensearch-project/alerting.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/alerting.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for alerting)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/alerting.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/alerting.git 1.1.0.0)
                     BundleManifest.getCommitId(security)
                     BundleManifest.getRepo(security)
                     createReleaseTag.echo(Tagging security at 534fffe0e6cf2b33b9abcbc6508e98fc2d077a3d ...)
                     createReleaseTag.dir(security, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=534fffe0e6cf2b33b9abcbc6508e98fc2d077a3d}], userRemoteConfigs=[{url=https://github.com/opensearch-project/security.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/security.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for security)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/security.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/security.git 1.1.0.0)
                     BundleManifest.getCommitId(k-NN)
                     BundleManifest.getRepo(k-NN)
                     createReleaseTag.echo(Tagging k-NN at 6a3fdcafd75e63521bcf7893ce908642e1d9fcb6 ...)
                     createReleaseTag.dir(k-NN, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=6a3fdcafd75e63521bcf7893ce908642e1d9fcb6}], userRemoteConfigs=[{url=https://github.com/opensearch-project/k-NN.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/k-NN.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for k-NN)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/k-NN.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/k-NN.git 1.1.0.0)
                     BundleManifest.getCommitId(dashboards-reports)
                     BundleManifest.getRepo(dashboards-reports)
                     createReleaseTag.echo(Tagging dashboards-reports at 622f334b0724e47f7ffd21cf7e7d521a9f6c949e ...)
                     createReleaseTag.dir(dashboards-reports, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=622f334b0724e47f7ffd21cf7e7d521a9f6c949e}], userRemoteConfigs=[{url=https://github.com/opensearch-project/dashboards-reports.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/dashboards-reports.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for dashboards-reports)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-reports.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-reports.git 1.1.0.0)
                     BundleManifest.getCommitId(notifications)
                     BundleManifest.getRepo(notifications)
                     createReleaseTag.echo(Tagging notifications at d0d3e485c4a850f73652a989eeec795b7347fbb6 ...)
                     createReleaseTag.dir(notifications, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=d0d3e485c4a850f73652a989eeec795b7347fbb6}], userRemoteConfigs=[{url=https://github.com/opensearch-project/notifications.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/notifications.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for notifications)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/notifications.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/notifications.git 1.1.0.0)
                     BundleManifest.getCommitId(performance-analyzer-rca)
                     BundleManifest.getRepo(performance-analyzer-rca)
                     createReleaseTag.echo(Tagging performance-analyzer-rca at 345a10fd4f4e94d6392c925ad95503ba8addd152 ...)
                     createReleaseTag.dir(performance-analyzer-rca, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=345a10fd4f4e94d6392c925ad95503ba8addd152}], userRemoteConfigs=[{url=https://github.com/opensearch-project/performance-analyzer-rca.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/performance-analyzer-rca.git 1.1.0.0 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 1.1.0.0 tag for performance-analyzer-rca)
                        createReleaseTag.sh(git tag 1.1.0.0)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/performance-analyzer-rca.git 1.1.0.0, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/performance-analyzer-rca.git 1.1.0.0)
         release-tag.script(groovy.lang.Closure)
            release-tag.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
