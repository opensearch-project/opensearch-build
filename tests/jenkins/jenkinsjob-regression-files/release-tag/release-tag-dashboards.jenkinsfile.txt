   release-tag.run()
      release-tag.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      release-tag.library({identifier=jenkins@1.0.0, retriever=null})
      release-tag.pipeline(groovy.lang.Closure)
         release-tag.timeout({time=2, unit=HOURS})
         release-tag.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211130, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
         release-tag.stage(Create Release Tag, groovy.lang.Closure)
            release-tag.script(groovy.lang.Closure)
               release-tag.sh(curl -SLO https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.0.0-rc1/opensearch-dashboards-2.0.0-rc1-linux-x64.tar.gz && tar -xf opensearch-dashboards-2.0.0-rc1-linux-x64.tar.gz opensearch-dashboards-2.0.0-rc1/manifest.yml)
               release-tag.echo(The release distribution manifest is downloaded to tests/jenkins/data/opensearch-dashboards-bundle-2.0.0-rc1.yml)
               release-tag.createReleaseTag({distManifest=tests/jenkins/data/opensearch-dashboards-bundle-2.0.0-rc1.yml, tagVersion=2.0.0-rc1})
                  createReleaseTag.legacySCM(groovy.lang.Closure)
                  createReleaseTag.library({identifier=jenkins@main, retriever=null})
                  createReleaseTag.readYaml({file=tests/jenkins/data/opensearch-dashboards-bundle-2.0.0-rc1.yml})
                  BundleManifest.asBoolean()
                  BundleManifest.getNames()
                  createReleaseTag.echo(Creating 2.0.0-rc1 release tag for 11 components in the manifest)
                  createReleaseTag.usernamePassword({credentialsId=dummy_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  createReleaseTag.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     BundleManifest.getCommitId(ganttChartDashboards)
                     BundleManifest.getRepo(ganttChartDashboards)
                     createReleaseTag.echo(Tagging ganttChartDashboards at 69c54344eebb48d56deca823732954c27a10211c ...)
                     createReleaseTag.dir(ganttChartDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=69c54344eebb48d56deca823732954c27a10211c}], userRemoteConfigs=[{url=https://github.com/opensearch-project/dashboards-visualizations.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/dashboards-visualizations.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Tag 2.0.0.0-rc1 has been created with identical commit ID. Skipping creating new tag for ganttChartDashboards.)
                     BundleManifest.getCommitId(indexManagementDashboards)
                     BundleManifest.getRepo(indexManagementDashboards)
                     createReleaseTag.echo(Tagging indexManagementDashboards at a39d9d307e9fbbaf6f23aefe794aa23022a68fa0 ...)
                     createReleaseTag.dir(indexManagementDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=a39d9d307e9fbbaf6f23aefe794aa23022a68fa0}], userRemoteConfigs=[{url=https://github.com/opensearch-project/index-management-dashboards-plugin.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/index-management-dashboards-plugin.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for indexManagementDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/index-management-dashboards-plugin.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/index-management-dashboards-plugin.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(anomalyDetectionDashboards)
                     BundleManifest.getRepo(anomalyDetectionDashboards)
                     createReleaseTag.echo(Tagging anomalyDetectionDashboards at 3324c01f66ec9919cc6d69420c37f5687312f9c4 ...)
                     createReleaseTag.dir(anomalyDetectionDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=3324c01f66ec9919cc6d69420c37f5687312f9c4}], userRemoteConfigs=[{url=https://github.com/opensearch-project/anomaly-detection-dashboards-plugin}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/anomaly-detection-dashboards-plugin 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for anomalyDetectionDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/anomaly-detection-dashboards-plugin 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/anomaly-detection-dashboards-plugin 2.0.0.0-rc1)
                     BundleManifest.getCommitId(OpenSearch-Dashboards)
                     BundleManifest.getRepo(OpenSearch-Dashboards)
                     createReleaseTag.echo(Tagging OpenSearch-Dashboards at 23ee797c0542271a36746e0beea33833cd7396ba ...)
                     createReleaseTag.dir(OpenSearch-Dashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=23ee797c0542271a36746e0beea33833cd7396ba}], userRemoteConfigs=[{url=https://github.com/opensearch-project/OpenSearch-Dashboards.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/OpenSearch-Dashboards.git 2.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0-rc1 tag for OpenSearch-Dashboards)
                        createReleaseTag.sh(git tag 2.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/OpenSearch-Dashboards.git 2.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/OpenSearch-Dashboards.git 2.0.0-rc1)
                     BundleManifest.getCommitId(notificationsDashboards)
                     BundleManifest.getRepo(notificationsDashboards)
                     createReleaseTag.echo(Tagging notificationsDashboards at eb3af31759668a94727950d081e8a3a161f22918 ...)
                     createReleaseTag.dir(notificationsDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=eb3af31759668a94727950d081e8a3a161f22918}], userRemoteConfigs=[{url=https://github.com/opensearch-project/notifications.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/notifications.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for notificationsDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/notifications.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/notifications.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(securityDashboards)
                     BundleManifest.getRepo(securityDashboards)
                     createReleaseTag.echo(Tagging securityDashboards at 7420eb2b5115ad29c40a49de9b5acb42dd26bdc7 ...)
                     createReleaseTag.dir(securityDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=7420eb2b5115ad29c40a49de9b5acb42dd26bdc7}], userRemoteConfigs=[{url=https://github.com/opensearch-project/security-dashboards-plugin.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/security-dashboards-plugin.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for securityDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/security-dashboards-plugin.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/security-dashboards-plugin.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(functionalTestDashboards)
                     BundleManifest.getRepo(functionalTestDashboards)
                     createReleaseTag.echo(Tagging functionalTestDashboards at ec2da5c44634f40dc97c3fdac4e85ff7139091b3 ...)
                     createReleaseTag.dir(functionalTestDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=ec2da5c44634f40dc97c3fdac4e85ff7139091b3}], userRemoteConfigs=[{url=https://github.com/opensearch-project/opensearch-dashboards-functional-test.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/opensearch-dashboards-functional-test.git 2.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0-rc1 tag for functionalTestDashboards)
                        createReleaseTag.sh(git tag 2.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/opensearch-dashboards-functional-test.git 2.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/opensearch-dashboards-functional-test.git 2.0.0-rc1)
                     BundleManifest.getCommitId(alertingDashboards)
                     BundleManifest.getRepo(alertingDashboards)
                     createReleaseTag.echo(Tagging alertingDashboards at de11dd89cbdd431f5073901a74907125f1133baf ...)
                     createReleaseTag.dir(alertingDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=de11dd89cbdd431f5073901a74907125f1133baf}], userRemoteConfigs=[{url=https://github.com/opensearch-project/alerting-dashboards-plugin.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/alerting-dashboards-plugin.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for alertingDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/alerting-dashboards-plugin.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/alerting-dashboards-plugin.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(queryWorkbenchDashboards)
                     BundleManifest.getRepo(queryWorkbenchDashboards)
                     createReleaseTag.echo(Tagging queryWorkbenchDashboards at eb65d2d956872cb13c7cca340fff679468b86074 ...)
                     createReleaseTag.dir(queryWorkbenchDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=eb65d2d956872cb13c7cca340fff679468b86074}], userRemoteConfigs=[{url=https://github.com/opensearch-project/sql.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/sql.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for queryWorkbenchDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/sql.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/sql.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(reportsDashboards)
                     BundleManifest.getRepo(reportsDashboards)
                     createReleaseTag.echo(Tagging reportsDashboards at 478ea41b5d962bcf40964ffc7e3f1131f7e1fc34 ...)
                     createReleaseTag.dir(reportsDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=478ea41b5d962bcf40964ffc7e3f1131f7e1fc34}], userRemoteConfigs=[{url=https://github.com/opensearch-project/dashboards-reports.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/dashboards-reports.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for reportsDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-reports.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/dashboards-reports.git 2.0.0.0-rc1)
                     BundleManifest.getCommitId(observabilityDashboards)
                     BundleManifest.getRepo(observabilityDashboards)
                     createReleaseTag.echo(Tagging observabilityDashboards at 52ae188b9a38e96f1d666f51e56ed92998c1d745 ...)
                     createReleaseTag.dir(observabilityDashboards, groovy.lang.Closure)
                        createReleaseTag.checkout({$class=GitSCM, branches=[{name=52ae188b9a38e96f1d666f51e56ed92998c1d745}], userRemoteConfigs=[{url=https://github.com/opensearch-project/observability.git}]})
                        createReleaseTag.sh({script=git ls-remote --tags https://github.com/opensearch-project/observability.git 2.0.0.0-rc1 | awk 'NR==1{print $1}', returnStdout=true})
                        createReleaseTag.echo(Creating 2.0.0.0-rc1 tag for observabilityDashboards)
                        createReleaseTag.sh(git tag 2.0.0.0-rc1)
                        createReleaseTag.sh({script=git push https://GITHUB_TOKEN@github.com/opensearch-project/observability.git 2.0.0.0-rc1, returnStatus=true})
                        createReleaseTag.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/observability.git 2.0.0.0-rc1)
         release-tag.script(groovy.lang.Closure)
            release-tag.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
