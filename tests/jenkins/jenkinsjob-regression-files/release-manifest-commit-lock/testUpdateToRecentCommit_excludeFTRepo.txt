   release-manifest-commit-lock.run()
      release-manifest-commit-lock.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      release-manifest-commit-lock.library({identifier=jenkins@6.4.0, retriever=null})
      release-manifest-commit-lock.pipeline(groovy.lang.Closure)
         release-manifest-commit-lock.timeout({time=2, unit=HOURS})
         release-manifest-commit-lock.echo(Executing on agent [docker:[alwaysPull:true, args:, containerPerStageRoot:false, label:Jenkins-Agent-AL2023-X64-C54xlarge-Docker-Host, image:opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3, reuseNode:false, registryUrl:https://public.ecr.aws/, stages:[:]]])
         release-manifest-commit-lock.stage(Parameters Check, groovy.lang.Closure)
            release-manifest-commit-lock.script(groovy.lang.Closure)
         release-manifest-commit-lock.echo(Skipping stage MATCH_BUILD_MANIFEST)
         release-manifest-commit-lock.stage(UPDATE_TO_RECENT_COMMITS, groovy.lang.Closure)
            release-manifest-commit-lock.script(groovy.lang.Closure)
               release-manifest-commit-lock.readYaml({file=manifests/2.0.0/opensearch-2.0.0.yml})
               release-manifest-commit-lock.writeYaml({file=manifests/2.0.0/opensearch-2.0.0.yml, data={ci={image={name=opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211028}}, build={name=OpenSearch Dashboards, version=3.0.0}, components=[{name=OpenSearch-Dashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/OpenSearch-Dashboards.git}, {name=functionalTestDashboards, repository=https://github.com/opensearch-project/opensearch-dashboards-functional-test.git, ref=3.0}, {name=observabilityDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-observability.git}, {name=indexManagementDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/index-management-dashboards-plugin}, {name=ganttChartDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-visualizations.git}, {name=reportsDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-reports.git}, {name=queryWorkbenchDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/sql.git}, {name=anomalyDetectionDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/anomaly-detection-dashboards-plugin}], schema-version=1.0}, overwrite=true})
               release-manifest-commit-lock.sh(
                                yq eval -i '.' manifests/2.0.0/opensearch-2.0.0.yml
                                sed -i '1s/^/---\n/' manifests/2.0.0/opensearch-2.0.0.yml
                        )
               release-manifest-commit-lock.readYaml({file=manifests/2.0.0/opensearch-dashboards-2.0.0.yml})
               release-manifest-commit-lock.writeYaml({file=manifests/2.0.0/opensearch-dashboards-2.0.0.yml, data={ci={image={name=opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211028}}, build={name=OpenSearch Dashboards, version=3.0.0}, components=[{name=OpenSearch-Dashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/OpenSearch-Dashboards.git}, {name=functionalTestDashboards, repository=https://github.com/opensearch-project/opensearch-dashboards-functional-test.git, ref=3.0}, {name=observabilityDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-observability.git}, {name=indexManagementDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/index-management-dashboards-plugin}, {name=ganttChartDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-visualizations.git}, {name=reportsDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/dashboards-reports.git}, {name=queryWorkbenchDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/sql.git}, {name=anomalyDetectionDashboards, ref=tags/3.0.0, repository=https://github.com/opensearch-project/anomaly-detection-dashboards-plugin}], schema-version=1.0}, overwrite=true})
               release-manifest-commit-lock.sh(
                                yq eval -i '.' manifests/2.0.0/opensearch-dashboards-2.0.0.yml
                                sed -i '1s/^/---\n/' manifests/2.0.0/opensearch-dashboards-2.0.0.yml
                        )
         release-manifest-commit-lock.stage(Create Pull Request, groovy.lang.Closure)
            release-manifest-commit-lock.script(groovy.lang.Closure)
               release-manifest-commit-lock.usernamePassword({credentialsId=jenkins-github-bot-token, passwordVariable=GITHUB_TOKEN, usernameVariable=GITHUB_USER})
               release-manifest-commit-lock.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                  release-manifest-commit-lock.sh(
                                git remote set-url origin "https://opensearch-ci:GITHUB_TOKEN@github.com/opensearch-project/opensearch-build"
                                git config user.email "opensearch-infra@amazon.com"
                                git config user.name "opensearch-ci"
                                git checkout -b manifest-lock
                            )
                  release-manifest-commit-lock.sh({returnStdout=true, script=git status --porcelain})
                  release-manifest-commit-lock.sh(
                                    git status --porcelain | grep '^ M' | cut -d " " -f3 | xargs git add
                                    git commit -sm "Manifest Commit Lock for Release 2.0.0"
                                    git push origin manifest-lock --force
                                    gh pr create --title '[2.0.0] Manifest Commit Lock with action UPDATE_TO_RECENT_COMMITS' --body 'Manifest Commit Lock for Release 2.0.0 ' -H manifest-lock -B main
                                )
         release-manifest-commit-lock.script(groovy.lang.Closure)
            release-manifest-commit-lock.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
