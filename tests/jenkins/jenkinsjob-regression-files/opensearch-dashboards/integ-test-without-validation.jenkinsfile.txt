   integ-test.run()
      integ-test.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      integ-test.library({identifier=jenkins@8.0.0, retriever=null})
      integ-test.pipeline(groovy.lang.Closure)
         integ-test.credentials(jenkins-artifact-bucket-name)
         integ-test.timeout({time=7, unit=HOURS})
         integ-test.logRotator({daysToKeepStr=60})
         integ-test.buildDiscarder(null)
         integ-test.echo(Executing on agent [label:none])
         integ-test.stage(verify-parameters, groovy.lang.Closure)
            integ-test.echo(Executing on agent [label:Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host])
            integ-test.script(groovy.lang.Closure)
               integ-test.fileExists(manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml)
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@8.0.0, retriever=null})
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml"))
                  downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@8.0.0, retriever=null})
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-3.0.0-build.yml"))
                  downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-3.0.0-build.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
               BuildManifest.asBoolean()
               integ-test.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
               BuildManifest.asBoolean()
               BuildManifest.getArtifactArchitecture()
               BuildManifest.getArtifactPlatform()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getDistribution()
               BuildManifest.getArtifactRoot(test-integ-job, 215)
               BuildManifest.getArtifactRoot(distribution-build-opensearch, 215)
               integ-test.echo(Version: 3.0.0, VersionOpenSearch: 3.0.0, Agent: Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, OSD_BuildId: 215, OS_BuildId: 215, Distribution: tar)
         integ-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.echo(Skipping stage validate-artifacts)
         integ-test.stage(integ-test, groovy.lang.Closure)
            integ-test.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            integ-test.script(groovy.lang.Closure)
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@8.0.0, retriever=null})
                  downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml"))
                  downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                  downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
               BuildManifest.asBoolean()
               BuildManifest.getNames()
               integ-test.echo(switch_user_non_root: false)
               integ-test.echo(componentList: [ganttChartDashboards, indexManagementDashboards, anomalyDetectionDashboards, OpenSearch-Dashboards, reportsDashboards, queryWorkbenchDashboards, observabilityDashboards])
               integ-test.echo(Not on Windows, stash repository+artifacts)
               integ-test.echo(Downloading from S3: distribution-build-opensearch/3.0.0/215/linux/x64/tar)
               integ-test.downloadFromS3({assumedRoleName=opensearch-bundle, roleAccountNumberCred=jenkins-aws-account-public, downloadPath=distribution-build-opensearch/3.0.0/215/linux/x64/tar/, bucketName=job-s3-bucket-name, localPath=/tmp/workspace/artifacts, force=true})
                  downloadFromS3.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_NUMBER})
                  downloadFromS3.withCredentials([AWS_ACCOUNT_NUMBER], groovy.lang.Closure)
                     downloadFromS3.withAWS({role=opensearch-bundle, roleAccount=AWS_ACCOUNT_NUMBER, duration=900, roleSessionName=jenkins-session, region=us-east-1}, groovy.lang.Closure)
                        downloadFromS3.s3Download({file=/tmp/workspace/artifacts, bucket=job-s3-bucket-name, path=distribution-build-opensearch/3.0.0/215/linux/x64/tar/, force=true})
               integ-test.sh(cp -a /tmp/workspace/artifacts/distribution-build-opensearch/3.0.0/215/linux/x64/tar /tmp/workspace)
               integ-test.echo(Downloading from S3: test-integ-job/3.0.0/215/linux/x64/tar)
               integ-test.downloadFromS3({assumedRoleName=opensearch-bundle, roleAccountNumberCred=jenkins-aws-account-public, downloadPath=test-integ-job/3.0.0/215/linux/x64/tar/, bucketName=job-s3-bucket-name, localPath=/tmp/workspace/artifacts, force=true})
                  downloadFromS3.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_NUMBER})
                  downloadFromS3.withCredentials([AWS_ACCOUNT_NUMBER], groovy.lang.Closure)
                     downloadFromS3.withAWS({role=opensearch-bundle, roleAccount=AWS_ACCOUNT_NUMBER, duration=900, roleSessionName=jenkins-session, region=us-east-1}, groovy.lang.Closure)
                        downloadFromS3.s3Download({file=/tmp/workspace/artifacts, bucket=job-s3-bucket-name, path=test-integ-job/3.0.0/215/linux/x64/tar/, force=true})
               integ-test.sh(cp -a /tmp/workspace/artifacts/test-integ-job/3.0.0/215/linux/x64/tar /tmp/workspace)
               integ-test.sh(rm -rf /tmp/workspace/artifacts)
               integ-test.stash({includes=**, name=integtest-opensearch-dashboards-215})
               integ-test.echo(Adding Component: ganttChartDashboards)
               integ-test.echo(Adding Component: indexManagementDashboards)
               integ-test.echo(Adding Component: anomalyDetectionDashboards)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-1)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-2)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-3)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-4)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-5)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-6)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-7)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-8)
               integ-test.echo(Adding Component: OpenSearch-Dashboards-ci-group-9)
               integ-test.echo(Adding Component: reportsDashboards)
               integ-test.echo(Adding Component: queryWorkbenchDashboards)
               integ-test.echo(Adding Component: observabilityDashboards)
               integ-test.parallel({Run Integtest ganttChartDashboards=groovy.lang.Closure, Run Integtest indexManagementDashboards=groovy.lang.Closure, Run Integtest anomalyDetectionDashboards=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-1=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-2=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-3=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-4=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-5=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-6=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-7=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-8=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards-ci-group-9=groovy.lang.Closure, Run Integtest reportsDashboards=groovy.lang.Closure, Run Integtest queryWorkbenchDashboards=groovy.lang.Closure, Run Integtest observabilityDashboards=groovy.lang.Closure})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo ganttChartDashboards with index 0 will sleep 0 seconds to reduce load && sleep 0)
                        integ-test.runIntegTestScriptForOSD({localComponent=ganttChartDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=ganttChartDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: ganttChartDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component ganttChartDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component ganttChartDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component ganttChartDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo indexManagementDashboards with index 1 will sleep 20 seconds to reduce load && sleep 20)
                        integ-test.runIntegTestScriptForOSD({localComponent=indexManagementDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=indexManagementDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: indexManagementDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component indexManagementDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component indexManagementDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component indexManagementDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo anomalyDetectionDashboards with index 2 will sleep 40 seconds to reduce load && sleep 40)
                        integ-test.runIntegTestScriptForOSD({localComponent=anomalyDetectionDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=anomalyDetectionDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: anomalyDetectionDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component anomalyDetectionDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component anomalyDetectionDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component anomalyDetectionDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-1 will sleep 20 seconds to reduce load && sleep 20)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=1, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=1})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 1 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 1 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-1)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-2 will sleep 40 seconds to reduce load && sleep 40)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=2, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=2})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 2 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 2 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-2)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-3 will sleep 60 seconds to reduce load && sleep 60)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=3, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=3})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 3 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 3 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-3)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-4 will sleep 80 seconds to reduce load && sleep 80)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=4, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=4})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 4 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 4 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-4)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-5 will sleep 100 seconds to reduce load && sleep 100)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=5, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=5})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 5 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 5 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-5)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-6 will sleep 120 seconds to reduce load && sleep 120)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=6, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=6})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 6 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 6 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-6)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-7 will sleep 140 seconds to reduce load && sleep 140)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=7, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=7})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 7 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 7 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-7)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-8 will sleep 160 seconds to reduce load && sleep 160)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=8, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=8})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 8 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 8 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-8)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=3, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch-Dashboards-ci-group-9 will sleep 180 seconds to reduce load && sleep 180)
                        integ-test.runIntegTestScriptForOSD({localComponent=OpenSearch-Dashboards, switchUserNonRoot=false, ciGroup=9, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=9})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 9 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component OpenSearch-Dashboards --ci-group 9 --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component OpenSearch-Dashboards-ci-group-9)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo reportsDashboards with index 4 will sleep 80 seconds to reduce load && sleep 80)
                        integ-test.runIntegTestScriptForOSD({localComponent=reportsDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=reportsDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: reportsDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component reportsDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component reportsDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component reportsDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo queryWorkbenchDashboards with index 5 will sleep 100 seconds to reduce load && sleep 100)
                        integ-test.runIntegTestScriptForOSD({localComponent=queryWorkbenchDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=queryWorkbenchDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: queryWorkbenchDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component queryWorkbenchDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component queryWorkbenchDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component queryWorkbenchDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test.timeout({time=6, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo observabilityDashboards with index 6 will sleep 120 seconds to reduce load && sleep 120)
                        integ-test.runIntegTestScriptForOSD({localComponent=observabilityDashboards, switchUserNonRoot=false, ciGroup=, artifactPathOpenSearch=distribution-build-opensearch/3.0.0/215/linux/x64/tar, artifactPath=test-integ-job/3.0.0/215/linux/x64/tar, artifactBucketName=job-s3-bucket-name, distribution=tar, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                           runIntegTestScriptForOSD.legacySCM(groovy.lang.Closure)
                           runIntegTestScriptForOSD.library({identifier=jenkins@8.0.0, retriever=null})
                           runIntegTestScriptForOSD.unstash(integtest-opensearch-dashboards-215)
                           runIntegTestScriptForOSD.echo(Not on Windows, unstash repository+artifacts)
                           runIntegTestScriptForOSD.sh(rm -rf test-results)
                           runIntegTestScriptForOSD.runIntegTestScript({jobName=test-integ-job, componentName=observabilityDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false, ciGroup=})
                              runIntegTestScript.legacySCM(groovy.lang.Closure)
                              runIntegTestScript.library({identifier=jenkins@8.0.0, retriever=null})
                              runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                              BuildManifest.asBoolean()
                              BuildManifest.getArtifactArchitecture()
                              BuildManifest.getDistribution()
                              BuildManifest.getArtifactPlatform()
                              runIntegTestScript.echo(Start integTest on: tar x64 linux)
                              runIntegTestScript.echo(Possible Java Home: )
                              runIntegTestScript.echo(Build Id: 215)
                              BuildManifest.getArtifactRootUrl(test-integ-job, 215)
                              runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/test-integ-job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                              runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                              runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                              runIntegTestScript.echo(Component: observabilityDashboards)
                              runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                              runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component observabilityDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                              runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --component observabilityDashboards  --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar )
                        integ-test.echo(Completed running integtest for component observabilityDashboards)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@8.0.0, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.script(groovy.lang.Closure)
            integ-test.retry(5, groovy.lang.Closure)
               integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                  integ-test.checkout(groovy.lang.Closure)
                  integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                     downloadBuildManifest.legacySCM(groovy.lang.Closure)
                     downloadBuildManifest.library({identifier=jenkins@8.0.0, retriever=null})
                     downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml"))
                     downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                     downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml)
                     downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                     BuildManifest.asBoolean()
                  integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-3.0.0-build.yml})
                     downloadBuildManifest.legacySCM(groovy.lang.Closure)
                     downloadBuildManifest.library({identifier=jenkins@8.0.0, retriever=null})
                     downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-3.0.0-build.yml"))
                     downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-3.0.0-build.yml)
                     downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-3.0.0-build.yml)
                     downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                     BuildManifest.asBoolean()
                  integ-test.createUploadTestReportManifest({testManifest=manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml, buildManifest=tests/jenkins/data/opensearch-3.0.0-build.yml, dashboardsBuildManifest=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml, testRunID=215, testType=integ-test, rcNumber=0, componentName=})
                     createUploadTestReportManifest.legacySCM(groovy.lang.Closure)
                     createUploadTestReportManifest.library({identifier=jenkins@8.0.0, retriever=null})
                     createUploadTestReportManifest.readYaml({file=manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml})
                     TestManifest.asBoolean()
                     createUploadTestReportManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                     BuildManifest.asBoolean()
                     createUploadTestReportManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-3.0.0-build.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getDistribution()
                     createUploadTestReportManifest.echo(Start Reporting workflow for test type: tar)
                     BuildManifest.getArtifactRootUrl(distribution-build-opensearch, 215)
                     BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                     createUploadTestReportManifest.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar)
                     createUploadTestReportManifest.echo(Paths: opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar opensearch-dashboards=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar)
                     createUploadTestReportManifest.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar)
                     createUploadTestReportManifest.echo(Component: )
                     createUploadTestReportManifest.echo(Run command: ./report.sh manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --artifact-paths opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar opensearch-dashboards=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar --test-run-id 215 --test-type integ-test --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar --release-candidate 0 )
                     createUploadTestReportManifest.sh(./report.sh manifests/tests/jenkins/data/opensearch-dashboards-3.0.0-test.yml --artifact-paths opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/215/linux/x64/tar opensearch-dashboards=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/3.0.0/215/linux/x64/tar --test-run-id 215 --test-type integ-test --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/215/linux/x64/tar --release-candidate 0 )
                     createUploadTestReportManifest.echo(Build Id: 215)
                     BuildManifest.getArtifactRoot(dummy_job, 215)
                     createUploadTestReportManifest.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                     createUploadTestReportManifest.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                     createUploadTestReportManifest.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                        createUploadTestReportManifest.echo(Uploading to s3://dummy_job/3.0.0/215/linux/x64/tar/test-results/215/integ-test/test-report.yml)
                        createUploadTestReportManifest.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           createUploadTestReportManifest.s3Upload({file=/tmp/workspace/test-report.yml, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/215/linux/x64/tar/test-results/215/integ-test/test-report.yml})
                  integ-test.echo(Download report manifest from https://ci.opensearch.org/ci/dbc/integ-test-opensearch-dashboards/3.0.0/215/linux/x64/tar/test-results/215/integ-test/test-report.yml)
                  integ-test.archiveArtifacts({artifacts=test-report.yml})
            integ-test.retry(5, groovy.lang.Closure)
               integ-test.node(Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host, groovy.lang.Closure)
                  integ-test.sh(mkdir -p test-results-osd-215)
                  integ-test.sh(curl -sSL https://ci.opensearch.org/ci/dbc/integ-test-opensearch-dashboards/3.0.0/215/linux/x64/tar/test-results/215/integ-test/test-report.yml --output test-results-osd-215/test-report.yml)
                  integ-test.publishIntegTestResults({distributionBuildUrl=https://build.ci.opensearch.org/blue/organizations/jenkins/distribution-build-opensearch-dashboards/detail/distribution-build-opensearch-dashboards/215/pipeline, jobName=dummy_job, testReportManifestYml=test-results-osd-215/test-report.yml})
                  integ-test.postCleanup()
                     postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
            integ-test.script(groovy.lang.Closure)
               integ-test.string({name=INPUT_MANIFEST, value=3.0.0/opensearch-dashboards-3.0.0.yml})
               integ-test.string({name=DISTRIBUTION_NUMBER, value=215})
               integ-test.build({job=integ-test-notification, propagate=false, wait=false, parameters=[null, null]})
               integ-test.postCleanup()
                  postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
