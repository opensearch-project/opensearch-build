   bwc-test.run()
      bwc-test.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      bwc-test.library({identifier=jenkins@1.0.0, retriever=null})
      bwc-test.pipeline(groovy.lang.Closure)
         bwc-test.timeout({time=3, unit=HOURS})
         bwc-test.echo(Executing on agent [label:none])
         bwc-test.stage(verify-parameters, groovy.lang.Closure)
            bwc-test.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            bwc-test.script(groovy.lang.Closure)
               bwc-test.fileExists(manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml)
         bwc-test.stage(detect docker image + args, groovy.lang.Closure)
            bwc-test.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211028, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
            bwc-test.script(groovy.lang.Closure)
               bwc-test.detectTestDockerAgent()
                  detectTestDockerAgent.legacySCM(groovy.lang.Closure)
                  detectTestDockerAgent.library({identifier=jenkins@main, retriever=null})
                  detectTestDockerAgent.readYaml({file=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml})
                  TestManifest.asBoolean()
                  detectTestDockerAgent.echo(Using Docker image opensearchstaging/ci-runner:ci-runner-centos7-v1 (null))
         bwc-test.stage(bwc-test, groovy.lang.Closure)
            bwc-test.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:-e JAVA_HOME=/opt/java/openjdk-11, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
            bwc-test.script(groovy.lang.Closure)
               bwc-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/dist/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@main, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/dist/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  BuildManifest.asBoolean()
               BuildManifest.getArtifactBuildId()
               bwc-test.echo(BUILD_MANIFEST: tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml)
               bwc-test.echo(BUILD_ID: 215)
               bwc-test.runBwcTestScript({jobName=dummy_job, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, buildId=215})
                  runBwcTestScript.legacySCM(groovy.lang.Closure)
                  runBwcTestScript.library({identifier=jenkins@main, retriever=null})
                  runBwcTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getArtifactRootUrl(dummy_job, 215)
                  runBwcTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/dummy_job/1.2.0/215/linux/x64/tar)
                  runBwcTestScript.echo(Paths: opensearch-dashboards=https://ci.opensearch.org/ci/dbc/dummy_job/1.2.0/215/linux/x64/tar)
                  runBwcTestScript.sh(./test.sh bwc-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --test-run-id 215 --paths opensearch-dashboards=https://ci.opensearch.org/ci/dbc/dummy_job/1.2.0/215/linux/x64/tar)
         bwc-test.script(groovy.lang.Closure)
            bwc-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
               uploadTestResults.legacySCM(groovy.lang.Closure)
               uploadTestResults.library({identifier=jenkins@main, retriever=null})
               uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
               BuildManifest.asBoolean()
               uploadTestResults.echo(Build Id: 215)
               BuildManifest.getArtifactRoot(dummy_job, 215)
               uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
               uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
               uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                  uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                  uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
               BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
               Messages.asBoolean()
               Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                  uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                  uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
         bwc-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         bwc-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
            bwc-test.script(groovy.lang.Closure)
               Messages.asBoolean()
               Messages.get([bwc-test])
                  bwc-test.unstash({name=messages-bwc-test})
                  bwc-test.findFiles({excludes=, glob=messages/*})
                  bwc-test.dir(messages, groovy.lang.Closure)
                     bwc-test.deleteDir()
               bwc-test.publishNotification({icon=:white_check_mark:, message=BWC Tests Successful, extra=, credentialsId=jenkins-integ-test-webhook, manifest=tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml})
                  publishNotification.string({credentialsId=jenkins-integ-test-webhook, variable=WEBHOOK_URL})
                  publishNotification.withCredentials([WEBHOOK_URL], groovy.lang.Closure)
                     publishNotification.sh(curl -XPOST --header "Content-Type: application/json" --data '{"result_text":":white_check_mark:
JOB_NAME=dummy_job
BUILD_NUMBER=[215]
MESSAGE=BWC Tests Successful
BUILD_URL: htth://BUILD_URL_dummy.com
MANIFEST: tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml
"}' "WEBHOOK_URL")
               bwc-test.postCleanup()
                  postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
