   integ-test2.run()
      integ-test2.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      integ-test2.library({identifier=jenkins@4.1.1, retriever=null})
      integ-test2.pipeline(groovy.lang.Closure)
         integ-test2.credentials(jenkins-artifact-bucket-name)
         integ-test2.timeout({time=3, unit=HOURS})
         integ-test2.echo(Executing on agent [label:none])
         integ-test2.stage(verify-parameters, groovy.lang.Closure)
            integ-test2.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            integ-test2.script(groovy.lang.Closure)
               integ-test2.fileExists(manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml)
               integ-test2.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@4.1.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test2.downloadBuildManifest({url=null, path=build-manifest-opensearch.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@4.1.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL null --output build-manifest-opensearch.yml)
                  downloadBuildManifest.readYaml({file=build-manifest-opensearch.yml})
                  BuildManifest.asBoolean()
               integ-test2.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
               BuildManifest.asBoolean()
               integ-test2.readYaml({file=build-manifest-opensearch.yml})
               BuildManifest.asBoolean()
               BuildManifest.getArtifactArchitecture()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getDistribution()
               BuildManifest.getArtifactRoot(distribution-build-opensearch-dashboards, 215)
               BuildManifest.getArtifactRoot(distribution-build-opensearch, 215)
               integ-test2.echo(Version: 1.2.0, VersionOpenSearch: 1.2.0, Agent: Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, OSD_BuildId: 215, OS_BuildId: 215, Distribution: tar)
         integ-test2.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test2.stage(integ-test, groovy.lang.Closure)
            integ-test2.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            integ-test2.script(groovy.lang.Closure)
               integ-test2.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@4.1.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/builds/opensearch-dashboards/opensearch-dashboards-1.2.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test2.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
               BuildManifest.asBoolean()
               BuildManifest.getNames()
               integ-test2.echo(switch_user_non_root: false)
               integ-test2.echo(componentList: [ganttChartDashboards, indexManagementDashboards, anomalyDetectionDashboards, OpenSearch-Dashboards, securityDashboards, functionalTestDashboards, alertingDashboards, queryWorkbenchDashboards, reportsDashboards, observabilityDashboards])
               integ-test2.echo(Downloading from S3: distribution-build-opensearch/1.2.0/215/linux/x64/tar)
               integ-test2.downloadFromS3({assumedRoleName=opensearch-bundle, roleAccountNumberCred=jenkins-aws-account-public, downloadPath=distribution-build-opensearch/1.2.0/215/linux/x64/tar/, bucketName=DUMMY_ARTIFACT_BUCKET_NAME, localPath=/tmp/workspace/artifacts, force=true})
                  downloadFromS3.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_NUMBER})
                  downloadFromS3.withCredentials([AWS_ACCOUNT_NUMBER], groovy.lang.Closure)
                     downloadFromS3.withAWS({role=opensearch-bundle, roleAccount=AWS_ACCOUNT_NUMBER, duration=900, roleSessionName=jenkins-session, region=us-east-1}, groovy.lang.Closure)
                        downloadFromS3.s3Download({file=/tmp/workspace/artifacts, bucket=DUMMY_ARTIFACT_BUCKET_NAME, path=distribution-build-opensearch/1.2.0/215/linux/x64/tar/, force=true})
               integ-test2.sh(cp -a /tmp/workspace/artifacts/distribution-build-opensearch/1.2.0/215/linux/x64/tar /tmp/workspace)
               integ-test2.echo(Downloading from S3: distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
               integ-test2.downloadFromS3({assumedRoleName=opensearch-bundle, roleAccountNumberCred=jenkins-aws-account-public, downloadPath=distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/, bucketName=DUMMY_ARTIFACT_BUCKET_NAME, localPath=/tmp/workspace/artifacts, force=true})
                  downloadFromS3.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_NUMBER})
                  downloadFromS3.withCredentials([AWS_ACCOUNT_NUMBER], groovy.lang.Closure)
                     downloadFromS3.withAWS({role=opensearch-bundle, roleAccount=AWS_ACCOUNT_NUMBER, duration=900, roleSessionName=jenkins-session, region=us-east-1}, groovy.lang.Closure)
                        downloadFromS3.s3Download({file=/tmp/workspace/artifacts, bucket=DUMMY_ARTIFACT_BUCKET_NAME, path=distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar/, force=true})
               integ-test2.sh(cp -a /tmp/workspace/artifacts/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar /tmp/workspace)
               integ-test2.stash({includes=**, name=integtest-opensearch-dashboards-215})
               integ-test2.echo(Add Component: ganttChartDashboards)
               integ-test2.echo(Add Component: indexManagementDashboards)
               integ-test2.echo(Add Component: anomalyDetectionDashboards)
               integ-test2.echo(Add Component: OpenSearch-Dashboards)
               integ-test2.echo(Add Component: securityDashboards)
               integ-test2.echo(Add Component: functionalTestDashboards)
               integ-test2.echo(Add Component: alertingDashboards)
               integ-test2.echo(Add Component: queryWorkbenchDashboards)
               integ-test2.echo(Add Component: reportsDashboards)
               integ-test2.echo(Add Component: observabilityDashboards)
               integ-test2.parallel({Run Integtest ganttChartDashboards=groovy.lang.Closure, Run Integtest indexManagementDashboards=groovy.lang.Closure, Run Integtest anomalyDetectionDashboards=groovy.lang.Closure, Run Integtest OpenSearch-Dashboards=groovy.lang.Closure, Run Integtest securityDashboards=groovy.lang.Closure, Run Integtest functionalTestDashboards=groovy.lang.Closure, Run Integtest alertingDashboards=groovy.lang.Closure, Run Integtest queryWorkbenchDashboards=groovy.lang.Closure, Run Integtest reportsDashboards=groovy.lang.Closure, Run Integtest observabilityDashboards=groovy.lang.Closure})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: ganttChartDashboards)
                        integ-test2.sh(echo ganttChartDashboards with index 0 will sleep 0 seconds to reduce load && sleep 0)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=ganttChartDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: ganttChartDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component ganttChartDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component ganttChartDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component ganttChartDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: indexManagementDashboards)
                        integ-test2.sh(echo indexManagementDashboards with index 1 will sleep 10 seconds to reduce load && sleep 10)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=indexManagementDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: indexManagementDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component indexManagementDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component indexManagementDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component indexManagementDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: anomalyDetectionDashboards)
                        integ-test2.sh(echo anomalyDetectionDashboards with index 2 will sleep 20 seconds to reduce load && sleep 20)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=anomalyDetectionDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: anomalyDetectionDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component anomalyDetectionDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component anomalyDetectionDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component anomalyDetectionDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: OpenSearch-Dashboards)
                        integ-test2.sh(echo OpenSearch-Dashboards with index 3 will sleep 30 seconds to reduce load && sleep 30)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=OpenSearch-Dashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: OpenSearch-Dashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component OpenSearch-Dashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component OpenSearch-Dashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component OpenSearch-Dashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: securityDashboards)
                        integ-test2.sh(echo securityDashboards with index 4 will sleep 40 seconds to reduce load && sleep 40)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=securityDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: securityDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component securityDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component securityDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component securityDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: functionalTestDashboards)
                        integ-test2.sh(echo functionalTestDashboards with index 5 will sleep 50 seconds to reduce load && sleep 50)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=functionalTestDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: functionalTestDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component functionalTestDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component functionalTestDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component functionalTestDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: alertingDashboards)
                        integ-test2.sh(echo alertingDashboards with index 6 will sleep 60 seconds to reduce load && sleep 60)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=alertingDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: alertingDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component alertingDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component alertingDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component alertingDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: queryWorkbenchDashboards)
                        integ-test2.sh(echo queryWorkbenchDashboards with index 7 will sleep 70 seconds to reduce load && sleep 70)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=queryWorkbenchDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: queryWorkbenchDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component queryWorkbenchDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component queryWorkbenchDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component queryWorkbenchDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: reportsDashboards)
                        integ-test2.sh(echo reportsDashboards with index 8 will sleep 80 seconds to reduce load && sleep 80)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=reportsDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: reportsDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component reportsDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component reportsDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component reportsDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  integ-test2.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test2.echo(Component Name: observabilityDashboards)
                        integ-test2.sh(echo observabilityDashboards with index 9 will sleep 90 seconds to reduce load && sleep 90)
                        integ-test2.unstash(integtest-opensearch-dashboards-215)
                        integ-test2.sh(rm -rf test-results)
                        integ-test2.runIntegTestScript({jobName=distribution-build-opensearch-dashboards, componentName=observabilityDashboards, buildManifest=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@4.1.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getDistribution()
                           runIntegTestScript.echo(Start integTest for distribution type: tar)
                           runIntegTestScript.echo(Possible Java Home: )
                           runIntegTestScript.echo(Build Id: 215)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch-dashboards, 215)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/1.2.0/215/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar)
                           runIntegTestScript.echo(Component: observabilityDashboards)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component observabilityDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                           runIntegTestScript.sh(env PATH=$PATH  ./test.sh integ-test manifests/tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml --component observabilityDashboards --test-run-id 215 --paths opensearch=/tmp/workspace/tar opensearch-dashboards=/tmp/workspace/tar )
                        integ-test2.echo(Completed running integtest for component observabilityDashboards)
                        integ-test2.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@4.1.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.2.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 215)
                           BuildManifest.getArtifactRoot(dummy_job, 215)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/1.2.0/215/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/1.2.0/215/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/1.2.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test2.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test2.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test2.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
            integ-test2.script(groovy.lang.Closure)
               Messages.asBoolean()
               Messages.get([integ-test])
                  integ-test2.unstash({name=messages-integ-test})
                  integ-test2.findFiles({excludes=, glob=messages/*})
                  integ-test2.dir(messages, groovy.lang.Closure)
                     integ-test2.deleteDir()
               integ-test2.publishNotification({icon=:white_check_mark:, message=Integration Tests Successful, extra=, credentialsId=jenkins-integ-test-webhook, manifest=tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml})
                  publishNotification.string({credentialsId=jenkins-integ-test-webhook, variable=WEBHOOK_URL})
                  publishNotification.withCredentials([WEBHOOK_URL], groovy.lang.Closure)
                     publishNotification.sh(curl -XPOST --header "Content-Type: application/json" --data '{"result_text":":white_check_mark:
JOB_NAME=dummy_job
BUILD_NUMBER=[215]
MESSAGE=Integration Tests Successful
BUILD_URL: htth://BUILD_URL_dummy.com
MANIFEST: tests/jenkins/data/opensearch-dashboards-1.2.0-test.yml
"}' "WEBHOOK_URL")
               integ-test2.postCleanup()
                  postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
