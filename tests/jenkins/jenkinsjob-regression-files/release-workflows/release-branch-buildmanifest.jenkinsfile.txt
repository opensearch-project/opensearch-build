   release-branch.run()
      release-branch.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      release-branch.library({identifier=jenkins@9.6.0, retriever=null})
      release-branch.pipeline(groovy.lang.Closure)
         release-branch.timeout({time=1, unit=HOURS})
         release-branch.echo(Executing on agent [docker:[alwaysPull:true, args:, containerPerStageRoot:false, label:Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host, image:opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3, reuseNode:false, registryUrl:https://public.ecr.aws/, stages:[:]]])
         release-branch.stage(Create Release Branch, groovy.lang.Closure)
            release-branch.script(groovy.lang.Closure)
               release-branch.withSecrets({secrets=[{envVar=GITHUB_USER, secretRef=op://opensearch-infra-secrets/github-bot/ci-bot-username}, {envVar=GITHUB_TOKEN, secretRef=op://opensearch-infra-secrets/github-bot/ci-bot-token}]}, groovy.lang.Closure)
                  release-branch.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.0/latest/linux/x64/tar/builds/opensearch/manifest.yml, path=tests/jenkins/data/opensearch-1.3.0-build.yml})
                     downloadBuildManifest.legacySCM(groovy.lang.Closure)
                     downloadBuildManifest.library({identifier=jenkins@9.6.0, retriever=null})
                     downloadBuildManifest.isUnix()
                     downloadBuildManifest.sh(mkdir -p $(dirname "tests/jenkins/data/opensearch-1.3.0-build.yml"))
                     downloadBuildManifest.sh(touch tests/jenkins/data/opensearch-1.3.0-build.yml)
                     downloadBuildManifest.sh(curl -sSL --retry 5 https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.0/latest/linux/x64/tar/builds/opensearch/manifest.yml --output tests/jenkins/data/opensearch-1.3.0-build.yml)
                     downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-1.3.0-build.yml})
                     BuildManifest.asBoolean()
                  release-branch.readYaml({file=tests/jenkins/data/opensearch-1.3.0-build.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getNames()
                  BuildManifest.getRepo(OpenSearch)
                  release-branch.sh({script=git ls-remote https://github.com/opensearch-project/OpenSearch.git 2.11, returnStdout=true})
                  release-branch.dir(OpenSearch, groovy.lang.Closure)
                     release-branch.checkout({$class=GitSCM, branches=[{name=2.x}], userRemoteConfigs=[{url=https://github.com/opensearch-project/OpenSearch.git}]})
                     BuildManifest.getCommitId(OpenSearch)
                     release-branch.echo(Create new branch for OpenSearch with commit id b7334f49d530ffd1a3f7bd0e5832b9b2a9caa583 on 2.x)
                     release-branch.sh(git checkout -b 2.11 b7334f49d530ffd1a3f7bd0e5832b9b2a9caa583)
                     release-branch.sh(git push https://GITHUB_TOKEN@github.com/opensearch-project/OpenSearch.git 2.11)
         release-branch.script(groovy.lang.Closure)
            release-branch.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
