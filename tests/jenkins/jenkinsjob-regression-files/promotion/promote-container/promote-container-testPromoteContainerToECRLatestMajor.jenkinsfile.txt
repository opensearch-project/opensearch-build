   promote-docker-ecr.run()
      promote-docker-ecr.legacySCM(groovy.lang.Closure)
      promote-docker-ecr.library({identifier=jenkins@20211123, retriever=null})
      promote-docker-ecr.pipeline(groovy.lang.Closure)
         promote-docker-ecr.timeout({time=1, unit=HOURS})
         promote-docker-ecr.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk11-v2, reuseNode:false, stages:[:], args:-u root -v /var/run/docker.sock:/var/run/docker.sock, alwaysPull:false, containerPerStageRoot:false, label:Jenkins-Agent-al2-x64-c54xlarge-Docker-Host]])
         promote-docker-ecr.stage(Parameters Check, groovy.lang.Closure)
            promote-docker-ecr.script(groovy.lang.Closure)
         promote-docker-ecr.stage(image-promote-to-prod, groovy.lang.Closure)
            promote-docker-ecr.script(groovy.lang.Closure)
               promote-docker-ecr.promoteContainer({imageRepository=alpine, version=3.15.4, sourceTag=3.15.4-1234, dockerPromote=false, ecrPromote=true, latestTag=true, majorVersionTag=true})
                  promoteContainer.copyContainer({sourceImage=alpine:3.15.4-1234, sourceRegistry=opensearchstaging, destinationImage=alpine:3.15.4, destinationRegistry=public.ecr.aws/opensearchproject})
                     copyContainer.string({credentialsId=jenkins-artifact-promotion-role, variable=ARTIFACT_PROMOTION_ROLE_NAME})
                     copyContainer.string({credentialsId=jenkins-aws-production-account, variable=AWS_ACCOUNT_ARTIFACT})
                     copyContainer.withCredentials([ARTIFACT_PROMOTION_ROLE_NAME, AWS_ACCOUNT_ARTIFACT], groovy.lang.Closure)
                        copyContainer.withAWS({role=ARTIFACT_PROMOTION_ROLE_NAME, roleAccount=AWS_ACCOUNT_ARTIFACT, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           copyContainer.sh({returnStdout=true, script=aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opensearchproject})
                           copyContainer.sh(
                        gcrane cp opensearchstaging/alpine:3.15.4-1234 public.ecr.aws/opensearchproject/alpine:3.15.4
                        docker logout public.ecr.aws/opensearchproject
                    )
                  promoteContainer.copyContainer({sourceImage=alpine:3.15.4-1234, sourceRegistry=opensearchstaging, destinationImage=alpine:3, destinationRegistry=public.ecr.aws/opensearchproject})
                     copyContainer.string({credentialsId=jenkins-artifact-promotion-role, variable=ARTIFACT_PROMOTION_ROLE_NAME})
                     copyContainer.string({credentialsId=jenkins-aws-production-account, variable=AWS_ACCOUNT_ARTIFACT})
                     copyContainer.withCredentials([ARTIFACT_PROMOTION_ROLE_NAME, AWS_ACCOUNT_ARTIFACT], groovy.lang.Closure)
                        copyContainer.withAWS({role=ARTIFACT_PROMOTION_ROLE_NAME, roleAccount=AWS_ACCOUNT_ARTIFACT, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           copyContainer.sh({returnStdout=true, script=aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opensearchproject})
                           copyContainer.sh(
                        gcrane cp opensearchstaging/alpine:3.15.4-1234 public.ecr.aws/opensearchproject/alpine:3
                        docker logout public.ecr.aws/opensearchproject
                    )
                  promoteContainer.copyContainer({sourceImage=alpine:3.15.4-1234, sourceRegistry=opensearchstaging, destinationImage=alpine:latest, destinationRegistry=public.ecr.aws/opensearchproject})
                     copyContainer.string({credentialsId=jenkins-artifact-promotion-role, variable=ARTIFACT_PROMOTION_ROLE_NAME})
                     copyContainer.string({credentialsId=jenkins-aws-production-account, variable=AWS_ACCOUNT_ARTIFACT})
                     copyContainer.withCredentials([ARTIFACT_PROMOTION_ROLE_NAME, AWS_ACCOUNT_ARTIFACT], groovy.lang.Closure)
                        copyContainer.withAWS({role=ARTIFACT_PROMOTION_ROLE_NAME, roleAccount=AWS_ACCOUNT_ARTIFACT, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           copyContainer.sh({returnStdout=true, script=aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opensearchproject})
                           copyContainer.sh(
                        gcrane cp opensearchstaging/alpine:3.15.4-1234 public.ecr.aws/opensearchproject/alpine:latest
                        docker logout public.ecr.aws/opensearchproject
                    )
         promote-docker-ecr.script(groovy.lang.Closure)
            promote-docker-ecr.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            promote-docker-ecr.sh(docker logout)
