   promote-docker-ecr.run()
      promote-docker-ecr.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      promote-docker-ecr.library({identifier=jenkins@1.0.0, retriever=null})
      promote-docker-ecr.pipeline(groovy.lang.Closure)
         promote-docker-ecr.timeout({time=1, unit=HOURS})
         promote-docker-ecr.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk11-v2, reuseNode:false, stages:[:], args:-u root -v /var/run/docker.sock:/var/run/docker.sock, alwaysPull:false, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
         promote-docker-ecr.stage(Parameters Check, groovy.lang.Closure)
            promote-docker-ecr.script(groovy.lang.Closure)
         promote-docker-ecr.stage(image-promote-to-prod, groovy.lang.Closure)
            promote-docker-ecr.script(groovy.lang.Closure)
               promote-docker-ecr.promoteContainer({imageRepository=opensearch:2.0.1.2901, version=2.0.1, dockerPromote=true, ecrPromote=false, latestTag=false, majorVersionTag=false})
                  promoteContainer.string({name=SOURCE_IMAGE_REGISTRY, value=opensearchstaging})
                  promoteContainer.string({name=SOURCE_IMAGE, value=opensearch:2.0.1.2901})
                  promoteContainer.string({name=DESTINATION_IMAGE_REGISTRY, value=opensearchproject})
                  promoteContainer.string({name=DESTINATION_IMAGE, value=opensearch:2.0.1})
                  promoteContainer.build({job=docker-copy, parameters=[null, null, null, null]})
               promote-docker-ecr.promoteContainer({imageRepository=opensearch-dashboards:2.0.1-2345, version=2.0.1, dockerPromote=true, ecrPromote=false, latestTag=false, majorVersionTag=false})
                  promoteContainer.string({name=SOURCE_IMAGE_REGISTRY, value=opensearchstaging})
                  promoteContainer.string({name=SOURCE_IMAGE, value=opensearch-dashboards:2.0.1-2345})
                  promoteContainer.string({name=DESTINATION_IMAGE_REGISTRY, value=opensearchproject})
                  promoteContainer.string({name=DESTINATION_IMAGE, value=opensearch-dashboards:2.0.1})
                  promoteContainer.build({job=docker-copy, parameters=[null, null, null, null]})
               promote-docker-ecr.promoteContainer({imageRepository=data-prepper:2.0.1.123, version=2.0.1, dockerPromote=true, ecrPromote=false, latestTag=false, majorVersionTag=false})
                  promoteContainer.string({name=SOURCE_IMAGE_REGISTRY, value=dummy_dataprepper_ecr_url})
                  promoteContainer.string({name=SOURCE_IMAGE, value=data-prepper:2.0.1.123})
                  promoteContainer.string({name=DESTINATION_IMAGE_REGISTRY, value=opensearchproject})
                  promoteContainer.string({name=DESTINATION_IMAGE, value=data-prepper:2.0.1})
                  promoteContainer.build({job=docker-copy, parameters=[null, null, null, null]})
         promote-docker-ecr.script(groovy.lang.Closure)
            promote-docker-ecr.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            promote-docker-ecr.sh(docker logout)
