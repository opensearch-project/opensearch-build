   docker-build.run()
      docker-build.pipeline(groovy.lang.Closure)
         docker-build.timeout({time=5, unit=HOURS})
         docker-build.echo(Executing on agent [label:none])
         docker-build.stage(Parameters Check, groovy.lang.Closure)
            docker-build.script(groovy.lang.Closure)
         docker-build.stage(docker-build, groovy.lang.Closure)
            docker-build.echo(Executing on agent [docker:[alwaysPull:true, args:-u root -v /var/run/docker.sock:/var/run/docker.sock, containerPerStageRoot:false, label:Jenkins-Agent-Ubuntu2404-X64-M52xlarge-Docker-Builder, image:opensearchstaging/ci-runner:ubuntu2404-x64-docker-buildx0.9.1-qemu8.2-v1, reuseNode:false, registryUrl:https://public.ecr.aws/, stages:[:]]])
            docker-build.script(groovy.lang.Closure)
               docker-build.echo(The docker-build workflow will only push docker images to staging, please use docker-copy to move the image to other repositories)
               docker-build.checkout({$class=GitSCM, branches=[{name=main}], userRemoteConfigs=[{url=https://github.com/opensearch-project/opensearch-build}]})
               docker-build.echo(Account: dockerhub staging)
               docker-build.withSecrets({secrets=[{envVar=DOCKER_USERNAME, secretRef=op://opensearch-infra-secrets/dockerhub-staging-credentials/username}, {envVar=DOCKER_PASSWORD, secretRef=op://opensearch-infra-secrets/dockerhub-staging-credentials/password}]}, groovy.lang.Closure)
                  docker-build.isUnix()
                  docker-build.sh(
                                set -e
                                set +x
                                docker logout && echo dockerPassword | docker login -u dockerUsername --password-stdin && eval bash docker/ci/build-image-multi-arch.sh -v <TAG_NAME> -f <DOCKERFILE PATH>
                            )
         docker-build.script(groovy.lang.Closure)
            docker-build.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            docker-build.isUnix()
            docker-build.sh(docker logout && docker image prune -f --all)
