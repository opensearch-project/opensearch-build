   docker-copy.run()
      docker-copy.legacySCM(groovy.lang.Closure)
      docker-copy.library({identifier=jenkins@20211123, retriever=null})
      docker-copy.pipeline(groovy.lang.Closure)
         docker-copy.timeout({time=30})
         docker-copy.echo(Executing on agent [label:none])
         docker-copy.stage(Parameters Check, groovy.lang.Closure)
            docker-copy.script(groovy.lang.Closure)
         docker-copy.stage(Copy Image to ECR/DockerHub, groovy.lang.Closure)
            docker-copy.script(groovy.lang.Closure)
               docker-copy.copyContainer({sourceImage=alpine:3.15.4, sourceRegistry=public.ecr.aws/opensearchstaging, destinationImage=alpine:3.15.4, destinationRegistry=public.ecr.aws/opensearchproject})
                  copyContainer.string({credentialsId=jenkins-artifact-promotion-role, variable=ARTIFACT_PROMOTION_ROLE_NAME})
                  copyContainer.string({credentialsId=jenkins-aws-production-account, variable=AWS_ACCOUNT_ARTIFACT})
                  copyContainer.withCredentials([ARTIFACT_PROMOTION_ROLE_NAME, AWS_ACCOUNT_ARTIFACT], groovy.lang.Closure)
                     copyContainer.withAWS({role=ARTIFACT_PROMOTION_ROLE_NAME, roleAccount=AWS_ACCOUNT_ARTIFACT, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        copyContainer.sh({returnStdout=true, script=aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opensearchproject})
                        copyContainer.sh(
                        gcrane cp public.ecr.aws/opensearchstaging/alpine:3.15.4 public.ecr.aws/opensearchproject/alpine:3.15.4
                        docker logout public.ecr.aws/opensearchproject
                    )
         docker-copy.script(groovy.lang.Closure)
            docker-copy.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            docker-copy.sh(docker logout public.ecr.aws/opensearchproject && docker image prune -f --all)
