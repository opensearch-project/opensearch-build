   validate-artifacts.run()
      validate-artifacts.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      validate-artifacts.library({identifier=jenkins@4.1.1, retriever=null})
      validate-artifacts.pipeline(groovy.lang.Closure)
         validate-artifacts.timeout({time=1, unit=HOURS})
         validate-artifacts.echo(Executing on agent [label:none])
         validate-artifacts.stage(verify-parameters, groovy.lang.Closure)
            validate-artifacts.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            validate-artifacts.script(groovy.lang.Closure)
         validate-artifacts.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         validate-artifacts.stage(Validate, groovy.lang.Closure)
            validate-artifacts.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            validate-artifacts.script(groovy.lang.Closure)
               validate-artifacts.stash({includes=**, name=validate-artifacts-123})
               validate-artifacts.echo(Validating Distribution: docker)
               validate-artifacts.echo(Validating Distribution: tar)
               validate-artifacts.echo(Validating Distribution: rpm)
               validate-artifacts.echo(Validating Distribution: yum)
               validate-artifacts.parallel({docker-x64=groovy.lang.Closure, tar-x64=groovy.lang.Closure, rpm-x64=groovy.lang.Closure, yum-x64=groovy.lang.Closure})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-X64-C54xlarge-Single-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=docker, arch=x64, os-build-number=6039, osd-build-number=4104, using-staging-artifact-only=})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution docker --arch x64 --os-build-number 6039 --osd-build-number 4104 --using-staging-artifact-only )
                        validate-artifacts.echo(Completed validation for docker-x64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=tar, arch=x64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution tar --arch x64)
                        validate-artifacts.echo(Completed validation for tar-x64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=rpm, arch=x64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution rpm --arch x64)
                        validate-artifacts.echo(Completed validation for rpm-x64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=yum, arch=x64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution yum --arch x64)
                        validate-artifacts.echo(Completed validation for yum-x64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
               validate-artifacts.echo(Validating Distribution: docker)
               validate-artifacts.echo(Validating Distribution: tar)
               validate-artifacts.echo(Validating Distribution: rpm)
               validate-artifacts.echo(Validating Distribution: yum)
               validate-artifacts.parallel({docker-arm64=groovy.lang.Closure, tar-arm64=groovy.lang.Closure, rpm-arm64=groovy.lang.Closure, yum-arm64=groovy.lang.Closure})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-Arm64-C6g4xlarge-Single-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=docker, arch=arm64, os-build-number=6039, osd-build-number=4104, using-staging-artifact-only=})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution docker --arch arm64 --os-build-number 6039 --osd-build-number 4104 --using-staging-artifact-only )
                        validate-artifacts.echo(Completed validation for docker-arm64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-Arm64-C6g4xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=tar, arch=arm64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution tar --arch arm64)
                        validate-artifacts.echo(Completed validation for tar-arm64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-Arm64-C6g4xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=rpm, arch=arm64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution rpm --arch arm64)
                        validate-artifacts.echo(Completed validation for rpm-arm64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
                  validate-artifacts.timeout({time=30}, groovy.lang.Closure)
                     validate-artifacts.node(Jenkins-Agent-AL2-Arm64-C6g4xlarge-Docker-Host, groovy.lang.Closure)
                        validate-artifacts.unstash(validate-artifacts-123)
                        validate-artifacts.validateArtifacts({version=2.3.0, distribution=yum, arch=arm64})
                           validateArtifacts.fileExists(/tmp/workspace/validation.sh)
                           validateArtifacts.sh(/tmp/workspace/validation.sh  --version 2.3.0 --distribution yum --arch arm64)
                        validate-artifacts.echo(Completed validation for yum-arm64)
                        validate-artifacts.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         validate-artifacts.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
