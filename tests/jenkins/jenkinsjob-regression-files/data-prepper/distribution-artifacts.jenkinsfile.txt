   distribution-artifacts.run()
      distribution-artifacts.legacySCM(groovy.lang.Closure)
      distribution-artifacts.library({identifier=jenkins@20211123, retriever=null})
      distribution-artifacts.pipeline(groovy.lang.Closure)
         distribution-artifacts.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-al2-x64-c54xlarge-Docker-Host]])
         distribution-artifacts.stage(Build Data Prepper, groovy.lang.Closure)
            distribution-artifacts.script(groovy.lang.Closure)
               distribution-artifacts.checkout({changelog=false, poll=false, scm={$class=GitSCM, branches=[{name=refs/tags/0.22.1}], userRemoteConfigs=[{url=https://github.com/opensearch-project/data-prepper.git}]}})
               distribution-artifacts.sh(./gradlew clean :release:archives:linux:linuxTar -Prelease)
               distribution-artifacts.sh({script=find /tmp/workspace/release/archives/linux/build/distributions | sed -n "s|^/tmp/workspace/release/archives/linux/build/distributions/||p", returnStdout=true})
         distribution-artifacts.stage(Sign Artifacts, groovy.lang.Closure)
            distribution-artifacts.script(groovy.lang.Closure)
               distribution-artifacts.signArtifacts({artifactPath=/tmp/workspace/release/archives/linux/build/distributions, sigtype=.sig, platform=linux})
                  signArtifacts.fileExists(/tmp/workspace/sign.sh)
                  signArtifacts.git({url=https://github.com/opensearch-project/opensearch-build.git, branch=main})
                  signArtifacts.sh(curl -sSL https://artifacts.opensearch.org/publickeys/opensearch.pgp | gpg --import -)
                  signArtifacts.usernamePassword({credentialsId=github_bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  signArtifacts.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     signArtifacts.sh(
            #!/bin/bash
            set +x
            export ROLE=dummy_signer_client_role
            export EXTERNAL_ID=signer_client_external_id
            export UNSIGNED_BUCKET=signer_client_unsigned_bucket
            export SIGNED_BUCKET=signer_client_signed_bucket

            /tmp/workspace/sign.sh /tmp/workspace/release/archives/linux/build/distributions --sigtype=.sig --platform=linux
        )
         distribution-artifacts.stage(Upload Artifacts to Staging Distribution Bucket, groovy.lang.Closure)
            distribution-artifacts.script(groovy.lang.Closure)
               distribution-artifacts.uploadToS3({sourcePath=/tmp/workspace/release/archives/linux/build/distributions, bucket=job-s3-bucket-name, path=data-prepper-distribution-artifacts/0.22.1/51/builds/signed})
                  uploadToS3.withAWS({role=Dummy_Upload_Role, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadToS3.s3Upload({file=/tmp/workspace/release/archives/linux/build/distributions, bucket=job-s3-bucket-name, path=data-prepper-distribution-artifacts/0.22.1/51/builds/signed})
               distribution-artifacts.printArtifactDownloadUrlsForStaging({artifactFileNames=[tar_dummy_1_artifact_1.0.0.tar.gz, tar_dummy_1_artifact_1.0.0.tar.gz.sig, tar_dummy_2_artifact_1.0.0.tar.gz, tar_dummy_2_artifact_1.0.0.tar.gz.sig], uploadPath=data-prepper-distribution-artifacts/0.22.1/51/builds/signed})
                  printArtifactDownloadUrlsForStaging.echo(File tar_dummy_1_artifact_1.0.0.tar.gz can be accessed using the url - https://ci.opensearch.org/ci/dbc/data-prepper-distribution-artifacts/0.22.1/51/builds/signed/tar_dummy_1_artifact_1.0.0.tar.gz)
                  printArtifactDownloadUrlsForStaging.echo(File tar_dummy_1_artifact_1.0.0.tar.gz.sig can be accessed using the url - https://ci.opensearch.org/ci/dbc/data-prepper-distribution-artifacts/0.22.1/51/builds/signed/tar_dummy_1_artifact_1.0.0.tar.gz.sig)
                  printArtifactDownloadUrlsForStaging.echo(File tar_dummy_2_artifact_1.0.0.tar.gz can be accessed using the url - https://ci.opensearch.org/ci/dbc/data-prepper-distribution-artifacts/0.22.1/51/builds/signed/tar_dummy_2_artifact_1.0.0.tar.gz)
                  printArtifactDownloadUrlsForStaging.echo(File tar_dummy_2_artifact_1.0.0.tar.gz.sig can be accessed using the url - https://ci.opensearch.org/ci/dbc/data-prepper-distribution-artifacts/0.22.1/51/builds/signed/tar_dummy_2_artifact_1.0.0.tar.gz.sig)
         distribution-artifacts.script(groovy.lang.Closure)
            distribution-artifacts.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
