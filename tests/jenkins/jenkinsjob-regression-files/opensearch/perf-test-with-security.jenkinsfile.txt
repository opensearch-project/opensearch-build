   perf-test.run()
      perf-test.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      perf-test.library({identifier=jenkins@1.0.0, retriever=null})
      perf-test.pipeline(groovy.lang.Closure)
         perf-test.timeout({time=15, unit=HOURS})
         perf-test.echo(Executing on agent [label:none])
         perf-test.parameterizedCron(
            H 9 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.2.1/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 9 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.2.1/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 9 * * 3 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.2.1/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 9 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.2.1/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 1 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.3.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 1 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.3.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 1 * * 3 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.3.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 1 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.3.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 17 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.4.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 17 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.4.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 17 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.4.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 17 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/2.4.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 4 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 4 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 4 * * 3 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 4 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 12 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.6/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 12 * * * %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.6/latest/linux/arm64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0
            H 12 * * 3 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.6/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=3;WARMUP_ITERATIONS=2
            H 12 * * 5 %BUNDLE_MANIFEST_URL=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/1.3.6/latest/linux/x64/tar/dist/opensearch/manifest.yml;TEST_ITERATIONS=250;WARMUP_ITERATIONS=0


        )
         perf-test.stage(validate-and-set-parameters, groovy.lang.Closure)
            perf-test.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
            perf-test.script(groovy.lang.Closure)
               perf-test.downloadBuildManifest({url=test://artifact.url, path=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@20211123, retriever=null})
                  downloadBuildManifest.sh(curl -sSL test://artifact.url --output tests/jenkins/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getArtifactArchitecture()
               perf-test.echo(HAS_SECURITY: true)
               Messages.asBoolean()
               Messages.add(perf-test, Performance tests for #1236)
                  perf-test.writeFile({file=messages/perf-test.msg, text=Performance tests for #1236})
                  perf-test.stash({includes=messages/*, name=messages-perf-test})
         perf-test.stage(test-with-security, groovy.lang.Closure)
            perf-test.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
            perf-test.script(groovy.lang.Closure)
               perf-test.downloadBuildManifest({url=test://artifact.url, path=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@20211123, retriever=null})
                  downloadBuildManifest.sh(curl -sSL test://artifact.url --output tests/jenkins/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               perf-test.echo(BUNDLE_MANIFEST: tests/jenkins/data/opensearch-1.3.0-bundle.yml)
               perf-test.echo(BUILD_ID: 1236)
               perf-test.echo(Architecture: x64)
               perf-test.runPerfTestScript({bundleManifest=tests/jenkins/data/opensearch-1.3.0-bundle.yml, buildId=1236, architecture=x64, insecure=false, workload=nyc_taxis, testIterations=1, warmupIterations=1, stackNameSuffix=307})
                  runPerfTestScript.legacySCM(groovy.lang.Closure)
                  runPerfTestScript.library({identifier=jenkins@20211123, retriever=null})
                  runPerfTestScript.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runPerfTestScript.sh(
        pipenv install "dataclasses_json~=0.5" "aws_requests_auth~=0.4" "json2html~=1.3.0"
        pipenv install "aws-cdk.core~=1.143.0" "aws_cdk.aws_ec2~=1.143.0" "aws_cdk.aws_iam~=1.143.0"
        pipenv install "boto3~=1.18" "setuptools~=57.4" "retry~=0.9"
    )
                  runPerfTestScript.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                  runPerfTestScript.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                  runPerfTestScript.withCredentials([AWS_ACCOUNT_PUBLIC, ARTIFACT_BUCKET_NAME], groovy.lang.Closure)
                     runPerfTestScript.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runPerfTestScript.s3Download({file=config.yml, bucket=ARTIFACT_BUCKET_NAME, path=test_config/config.yml, force=true})
                  runPerfTestScript.usernamePassword({credentialsId=bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  runPerfTestScript.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     runPerfTestScript.sh(./test.sh perf-test --stack test-single-security-1236-x64-307 --bundle-manifest tests/jenkins/data/opensearch-1.3.0-bundle.yml --config config.yml  --workload nyc_taxis --test-iters 1 --warmup-iters 1 )
               Messages.asBoolean()
               Messages.asBoolean()
               Messages.get([perf-test])
                  perf-test.unstash({name=messages-perf-test})
                  perf-test.findFiles({excludes=, glob=messages/*})
                  perf-test.dir(messages, groovy.lang.Closure)
                     perf-test.deleteDir()
               Messages.add(perf-test, 
Performance tests with security for 1236 completed)
                  perf-test.writeFile({file=messages/perf-test.msg, text=
Performance tests with security for 1236 completed})
                  perf-test.stash({includes=messages/*, name=messages-perf-test})
         perf-test.script(groovy.lang.Closure)
            perf-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-1.3.0-bundle.yml, jobName=perf-test, buildNumber=307})
               uploadTestResults.legacySCM(groovy.lang.Closure)
               uploadTestResults.library({identifier=jenkins@20211123, retriever=null})
               uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
               BuildManifest.asBoolean()
               uploadTestResults.echo(Build Id: 1236)
               BuildManifest.getArtifactRoot(perf-test, 1236)
               uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
               uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
               uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                  uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/perf-test/1.3.0/1236/linux/x64/tar)
                  uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=perf-test/1.3.0/1236/linux/x64/tar/test-results/307})
               BuildManifest.getArtifactRootUrl(test://artifact.url, perf-test)
               Messages.asBoolean()
               Messages.add(test_stage, https://ci.opensearch.org/ci/dbc/test://artifact.url/1.3.0/perf-test/linux/x64/tar/test-results/)
                  uploadTestResults.writeFile({file=messages/test_stage.msg, text=https://ci.opensearch.org/ci/dbc/test://artifact.url/1.3.0/perf-test/linux/x64/tar/test-results/})
                  uploadTestResults.stash({includes=messages/*, name=messages-test_stage})
         perf-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         perf-test.stage(test-without-security, groovy.lang.Closure)
            perf-test.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host]])
            perf-test.script(groovy.lang.Closure)
               perf-test.downloadBuildManifest({url=test://artifact.url, path=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@20211123, retriever=null})
                  downloadBuildManifest.sh(curl -sSL test://artifact.url --output tests/jenkins/data/opensearch-1.3.0-bundle.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
               perf-test.echo(BUNDLE_MANIFEST: tests/jenkins/data/opensearch-1.3.0-bundle.yml)
               perf-test.echo(BUILD_ID: 1236)
               perf-test.echo(Architecture: x64)
               perf-test.runPerfTestScript({bundleManifest=tests/jenkins/data/opensearch-1.3.0-bundle.yml, buildId=1236, architecture=x64, insecure=true, workload=nyc_taxis, testIterations=1, warmupIterations=1, stackNameSuffix=307})
                  runPerfTestScript.legacySCM(groovy.lang.Closure)
                  runPerfTestScript.library({identifier=jenkins@20211123, retriever=null})
                  runPerfTestScript.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
                  BuildManifest.asBoolean()
                  runPerfTestScript.sh(
        pipenv install "dataclasses_json~=0.5" "aws_requests_auth~=0.4" "json2html~=1.3.0"
        pipenv install "aws-cdk.core~=1.143.0" "aws_cdk.aws_ec2~=1.143.0" "aws_cdk.aws_iam~=1.143.0"
        pipenv install "boto3~=1.18" "setuptools~=57.4" "retry~=0.9"
    )
                  runPerfTestScript.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                  runPerfTestScript.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                  runPerfTestScript.withCredentials([AWS_ACCOUNT_PUBLIC, ARTIFACT_BUCKET_NAME], groovy.lang.Closure)
                     runPerfTestScript.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        runPerfTestScript.s3Download({file=config.yml, bucket=ARTIFACT_BUCKET_NAME, path=test_config/config.yml, force=true})
                  runPerfTestScript.usernamePassword({credentialsId=bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  runPerfTestScript.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     runPerfTestScript.sh(./test.sh perf-test --stack test-single-1236-x64-307 --bundle-manifest tests/jenkins/data/opensearch-1.3.0-bundle.yml --config config.yml --without-security --workload nyc_taxis --test-iters 1 --warmup-iters 1 )
               Messages.asBoolean()
               Messages.asBoolean()
               Messages.get([perf-test])
                  perf-test.unstash({name=messages-perf-test})
                  perf-test.findFiles({excludes=, glob=messages/*})
                  perf-test.dir(messages, groovy.lang.Closure)
                     perf-test.deleteDir()
               Messages.add(perf-test, 
Performance tests without security for 1236 completed)
                  perf-test.writeFile({file=messages/perf-test.msg, text=
Performance tests without security for 1236 completed})
                  perf-test.stash({includes=messages/*, name=messages-perf-test})
         perf-test.script(groovy.lang.Closure)
            perf-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-1.3.0-bundle.yml, jobName=perf-test, buildNumber=307})
               uploadTestResults.legacySCM(groovy.lang.Closure)
               uploadTestResults.library({identifier=jenkins@20211123, retriever=null})
               uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-1.3.0-bundle.yml})
               BuildManifest.asBoolean()
               uploadTestResults.echo(Build Id: 1236)
               BuildManifest.getArtifactRoot(perf-test, 1236)
               uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
               uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
               uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                  uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/perf-test/1.3.0/1236/linux/x64/tar)
                  uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=perf-test/1.3.0/1236/linux/x64/tar/test-results/307})
               BuildManifest.getArtifactRootUrl(test://artifact.url, perf-test)
               Messages.asBoolean()
               Messages.add(test_stage, https://ci.opensearch.org/ci/dbc/test://artifact.url/1.3.0/perf-test/linux/x64/tar/test-results/)
                  uploadTestResults.writeFile({file=messages/test_stage.msg, text=https://ci.opensearch.org/ci/dbc/test://artifact.url/1.3.0/perf-test/linux/x64/tar/test-results/})
                  uploadTestResults.stash({includes=messages/*, name=messages-test_stage})
         perf-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         perf-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
            perf-test.script(groovy.lang.Closure)
               Messages.asBoolean()
               Messages.get([perf-test])
                  perf-test.unstash({name=messages-perf-test})
                  perf-test.findFiles({excludes=, glob=messages/*})
                  perf-test.dir(messages, groovy.lang.Closure)
                     perf-test.deleteDir()
               perf-test.publishNotification({icon=:white_check_mark:, message=Performance Tests Successful, extra=, credentialsId=jenkins-integ-test-webhook})
                  publishNotification.string({credentialsId=jenkins-integ-test-webhook, variable=WEBHOOK_URL})
                  publishNotification.withCredentials([WEBHOOK_URL], groovy.lang.Closure)
                     publishNotification.sh(curl -XPOST --header "Content-Type: application/json" --data '{"result_text":":white_check_mark:
JOB_NAME=perf-test
BUILD_NUMBER=[307]
MESSAGE=Performance Tests Successful
BUILD_URL: test://artifact.url
MANIFEST: null
"}' "WEBHOOK_URL")
               perf-test.postCleanup()
                  postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
