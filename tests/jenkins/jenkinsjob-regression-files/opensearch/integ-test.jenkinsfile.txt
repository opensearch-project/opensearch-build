   integ-test.run()
      integ-test.modernSCM({$class=GitSCMSource, remote=https://github.com/opensearch-project/opensearch-build-libraries.git})
      integ-test.library({identifier=jenkins@5.11.1, retriever=null})
      integ-test.pipeline(groovy.lang.Closure)
         integ-test.credentials(jenkins-artifact-bucket-name)
         integ-test.timeout({time=4, unit=HOURS})
         integ-test.logRotator({daysToKeepStr=30})
         integ-test.buildDiscarder(null)
         integ-test.echo(Executing on agent [label:none])
         integ-test.stage(verify-parameters, groovy.lang.Closure)
            integ-test.echo(Executing on agent [label:Jenkins-Agent-AL2023-X64-C54xlarge-Docker-Host])
            integ-test.script(groovy.lang.Closure)
               integ-test.fileExists(manifests/tests/jenkins/data/opensearch-3.0.0-test.yml)
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@5.11.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
               BuildManifest.asBoolean()
               BuildManifest.getNames()
               BuildManifest.getArtifactArchitecture()
               BuildManifest.getArtifactPlatform()
               BuildManifest.getArtifactBuildId()
               BuildManifest.getDistribution()
               BuildManifest.getArtifactRoot(distribution-build-opensearch, 8184)
               integ-test.echo(Version: 3.0.0, Agent: Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, BuildId: 8184, Distribution: tar, Components: [OpenSearch])
         integ-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.stage(integ-test, groovy.lang.Closure)
            integ-test.echo(Executing on agent [label:Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host])
            integ-test.script(groovy.lang.Closure)
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@5.11.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
               BuildManifest.asBoolean()
               BuildManifest.getNames()
               integ-test.echo(switch_user_non_root: false)
               integ-test.echo(componentList: [OpenSearch])
               integ-test.echo(Not on Windows, stash repository+artifacts)
               integ-test.echo(Downloading from S3: distribution-build-opensearch/3.0.0/8184/linux/x64/tar)
               integ-test.downloadFromS3({assumedRoleName=opensearch-bundle, roleAccountNumberCred=jenkins-aws-account-public, downloadPath=distribution-build-opensearch/3.0.0/8184/linux/x64/tar/, bucketName=job-s3-bucket-name, localPath=/tmp/workspace/artifacts, force=true})
                  downloadFromS3.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_NUMBER})
                  downloadFromS3.withCredentials([AWS_ACCOUNT_NUMBER], groovy.lang.Closure)
                     downloadFromS3.withAWS({role=opensearch-bundle, roleAccount=AWS_ACCOUNT_NUMBER, duration=900, roleSessionName=jenkins-session, region=us-east-1}, groovy.lang.Closure)
                        downloadFromS3.s3Download({file=/tmp/workspace/artifacts, bucket=job-s3-bucket-name, path=distribution-build-opensearch/3.0.0/8184/linux/x64/tar/, force=true})
               integ-test.sh(rm -rf /tmp/workspace/tar && mv -v /tmp/workspace/artifacts/distribution-build-opensearch/3.0.0/8184/linux/x64/tar /tmp/workspace)
               integ-test.stash({includes=**, name=integtest-opensearch-234})
               integ-test.echo(Add Component: OpenSearch)
               integ-test.parallel({Run Integtest OpenSearch=groovy.lang.Closure})
                  integ-test.timeout({time=2, unit=HOURS}, groovy.lang.Closure)
                     integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
                        integ-test.sh(echo OpenSearch with index 0 will sleep 0 seconds to reduce load && sleep 0)
                        integ-test.unstash(integtest-opensearch-234)
                        integ-test.echo(Not on Windows, unstash repository+artifacts)
                        integ-test.sh(rm -rf test-results)
                        integ-test.runIntegTestScript({jobName=distribution-build-opensearch, componentName=OpenSearch, buildManifest=tests/jenkins/data/opensearch-3.0.0-build.yml, testManifest=manifests/tests/jenkins/data/opensearch-3.0.0-test.yml, localPath=/tmp/workspace/tar, switchUserNonRoot=false})
                           runIntegTestScript.legacySCM(groovy.lang.Closure)
                           runIntegTestScript.library({identifier=jenkins@5.11.1, retriever=null})
                           runIntegTestScript.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           BuildManifest.getArtifactArchitecture()
                           BuildManifest.getDistribution()
                           BuildManifest.getArtifactPlatform()
                           runIntegTestScript.echo(Start integTest on: tar x64 linux)
                           runIntegTestScript.detectTestDockerAgent({testManifest=manifests/tests/jenkins/data/opensearch-3.0.0-test.yml})
                              detectTestDockerAgent.legacySCM(groovy.lang.Closure)
                              detectTestDockerAgent.library({identifier=jenkins@5.11.1, retriever=null})
                              detectTestDockerAgent.readYaml({file=manifests/tests/jenkins/data/opensearch-3.0.0-test.yml})
                              TestManifest.asBoolean()
                              detectTestDockerAgent.echo(Using Docker image opensearchstaging/ci-runner:ci-runner-centos7-v1 (null))
                              detectTestDockerAgent.echo(Using java version openjdk-17)
                           runIntegTestScript.echo(Possible Java Home: JAVA_HOME=/opt/java/openjdk-17)
                           runIntegTestScript.echo(Build Id: 8184)
                           BuildManifest.getArtifactRootUrl(distribution-build-opensearch, 8184)
                           runIntegTestScript.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar)
                           runIntegTestScript.echo(User provides localPath, use local artifacts: /tmp/workspace/tar)
                           runIntegTestScript.echo(Paths: opensearch=/tmp/workspace/tar)
                           runIntegTestScript.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar)
                           runIntegTestScript.echo(Component: OpenSearch)
                           runIntegTestScript.echo(Switch User to Non-Root (uid=1000): false)
                           runIntegTestScript.echo(Run command: env PATH=$PATH JAVA_HOME=/opt/java/openjdk-17 ./test.sh integ-test manifests/tests/jenkins/data/opensearch-3.0.0-test.yml --component OpenSearch --test-run-id 234 --paths opensearch=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar )
                           runIntegTestScript.sh(env PATH=$PATH JAVA_HOME=/opt/java/openjdk-17 ./test.sh integ-test manifests/tests/jenkins/data/opensearch-3.0.0-test.yml --component OpenSearch --test-run-id 234 --paths opensearch=/tmp/workspace/tar --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar )
                        BuildManifest.getRepo(OpenSearch)
                        integ-test.closeGithubIssue({repoUrl=https://github.com/opensearch-project/OpenSearch.git, issueTitle=[AUTOCUT] Integration Test failed for OpenSearch: 3.0.0 tar distribution, closeComment=Closing the issue as the Integration Test passed for OpenSearch<br>Version: 3.0.0<br>Distribution: tar<br>Architecture: x64<br>Platform: linux<br><br>Please check the logs: https://some/url/redirect<br><br> *, label=autocut,v3.0.0,integ-test-failure})
                           closeGithubIssue.usernamePassword({credentialsId=jenkins-github-bot-token, passwordVariable=GITHUB_TOKEN, usernameVariable=GITHUB_USER})
                           closeGithubIssue.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                              closeGithubIssue.sh({script=gh issue list --repo https://github.com/opensearch-project/OpenSearch.git -S "[AUTOCUT] Integration Test failed for OpenSearch: 3.0.0 tar distribution in:title" --label autocut,v3.0.0,integ-test-failure --json number --jq '.[0].number', returnStdout=true})
                              closeGithubIssue.sh({script=gh issue close bbb
ccc -R opensearch-project/OpenSearch --comment "Closing the issue as the Integration Test passed for OpenSearch<br>Version: 3.0.0<br>Distribution: tar<br>Architecture: x64<br>Platform: linux<br><br>Please check the logs: https://some/url/redirect<br><br> *", returnStdout=true})
                        integ-test.echo(Completed running integtest for component OpenSearch)
                        integ-test.uploadTestResults({buildManifestFileName=tests/jenkins/data/opensearch-3.0.0-build.yml, jobName=dummy_job})
                           uploadTestResults.legacySCM(groovy.lang.Closure)
                           uploadTestResults.library({identifier=jenkins@5.11.1, retriever=null})
                           uploadTestResults.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                           BuildManifest.asBoolean()
                           uploadTestResults.echo(Build Id: 8184)
                           BuildManifest.getArtifactRoot(dummy_job, 8184)
                           uploadTestResults.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                           uploadTestResults.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                           uploadTestResults.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                              uploadTestResults.echo(Uploading to s3://ARTIFACT_BUCKET_NAME/dummy_job/3.0.0/8184/linux/x64/tar)
                              uploadTestResults.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                                 uploadTestResults.s3Upload({file=test-results, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/8184/linux/x64/tar/test-results})
                           BuildManifest.getArtifactRootUrl(DUMMY_PUBLIC_ARTIFACT_URL, dummy_job)
                           Messages.asBoolean()
                           Messages.add(DUMMY_STAGE_NAME, https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/)
                              uploadTestResults.writeFile({file=messages/DUMMY_STAGE_NAME.msg, text=https://ci.opensearch.org/ci/dbc/DUMMY_PUBLIC_ARTIFACT_URL/3.0.0/dummy_job/linux/x64/tar/test-results/})
                              uploadTestResults.stash({includes=messages/*, name=messages-DUMMY_STAGE_NAME})
                        integ-test.postCleanup()
                           postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.script(groovy.lang.Closure)
            integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
               integ-test.checkout(groovy.lang.Closure)
               integ-test.downloadBuildManifest({url=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz, path=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  downloadBuildManifest.legacySCM(groovy.lang.Closure)
                  downloadBuildManifest.library({identifier=jenkins@5.11.1, retriever=null})
                  downloadBuildManifest.sh(curl -sSL https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar/dist/opensearch/opensearch-3.0.0-linux-x64.tar.gz --output tests/jenkins/data/opensearch-3.0.0-build.yml)
                  downloadBuildManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  BuildManifest.asBoolean()
               integ-test.createUploadTestReportManifest({testManifest=manifests/tests/jenkins/data/opensearch-3.0.0-test.yml, buildManifest=tests/jenkins/data/opensearch-3.0.0-build.yml, testRunID=234, testType=integ-test, componentName=})
                  createUploadTestReportManifest.legacySCM(groovy.lang.Closure)
                  createUploadTestReportManifest.library({identifier=jenkins@5.11.1, retriever=null})
                  createUploadTestReportManifest.readYaml({file=manifests/tests/jenkins/data/opensearch-3.0.0-test.yml})
                  TestManifest.asBoolean()
                  createUploadTestReportManifest.readYaml({file=tests/jenkins/data/opensearch-3.0.0-build.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getDistribution()
                  createUploadTestReportManifest.echo(Start Reporting workflow for test type: tar)
                  BuildManifest.getArtifactRootUrl(distribution-build-opensearch, 8184)
                  createUploadTestReportManifest.echo(Artifact root URL: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar)
                  createUploadTestReportManifest.echo(Paths: opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar)
                  createUploadTestReportManifest.echo(Base Path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar)
                  createUploadTestReportManifest.echo(Component: )
                  createUploadTestReportManifest.echo(Run command: ./report.sh manifests/tests/jenkins/data/opensearch-3.0.0-test.yml --artifact-paths opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar --test-run-id 234 --test-type integ-test --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar )
                  createUploadTestReportManifest.sh(./report.sh manifests/tests/jenkins/data/opensearch-3.0.0-test.yml --artifact-paths opensearch=https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/8184/linux/x64/tar --test-run-id 234 --test-type integ-test --base-path DUMMY_PUBLIC_ARTIFACT_URL/dummy_job/3.0.0/8184/linux/x64/tar )
                  createUploadTestReportManifest.echo(Build Id: 8184)
                  BuildManifest.getArtifactRoot(dummy_job, 8184)
                  createUploadTestReportManifest.string({credentialsId=jenkins-artifact-bucket-name, variable=ARTIFACT_BUCKET_NAME})
                  createUploadTestReportManifest.string({credentialsId=jenkins-aws-account-public, variable=AWS_ACCOUNT_PUBLIC})
                  createUploadTestReportManifest.withCredentials([ARTIFACT_BUCKET_NAME, AWS_ACCOUNT_PUBLIC], groovy.lang.Closure)
                     createUploadTestReportManifest.echo(Uploading to s3://dummy_job/3.0.0/8184/linux/x64/tar/test-results/234/integ-test/test-report.yml)
                     createUploadTestReportManifest.withAWS({role=opensearch-test, roleAccount=AWS_ACCOUNT_PUBLIC, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        createUploadTestReportManifest.s3Upload({file=/tmp/workspace/test-report.yml, bucket=ARTIFACT_BUCKET_NAME, path=dummy_job/3.0.0/8184/linux/x64/tar/test-results/234/integ-test/test-report.yml})
               integ-test.echo(Download report manifest from https://ci.opensearch.org/ci/dbc/integ-test/3.0.0/8184/linux/x64/tar/test-results/234/integ-test/test-report.yml)
               integ-test.archiveArtifacts({artifacts=test-report.yml})
         integ-test.postCleanup()
            postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
         integ-test.node(Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host, groovy.lang.Closure)
            integ-test.script(groovy.lang.Closure)
               Messages.asBoolean()
               Messages.get([integ-test])
                  integ-test.unstash({name=messages-integ-test})
                  integ-test.findFiles({excludes=, glob=messages/*})
                  integ-test.dir(messages, groovy.lang.Closure)
                     integ-test.deleteDir()
               integ-test.publishNotification({icon=:white_check_mark:, message=Integration Tests Successful, extra=, credentialsId=jenkins-integ-test-webhook, manifest=tests/jenkins/data/opensearch-3.0.0-test.yml})
                  publishNotification.string({credentialsId=jenkins-integ-test-webhook, variable=WEBHOOK_URL})
                  publishNotification.withCredentials([WEBHOOK_URL], groovy.lang.Closure)
                     publishNotification.sh(curl -XPOST --header "Content-Type: application/json" --data '{"result_text":":white_check_mark:
JOB_NAME=dummy_job
BUILD_NUMBER=[234]
MESSAGE=Integration Tests Successful
BUILD_URL: htth://BUILD_URL_dummy.com
MANIFEST: tests/jenkins/data/opensearch-3.0.0-test.yml
"}' "WEBHOOK_URL")
               integ-test.postCleanup()
                  postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
