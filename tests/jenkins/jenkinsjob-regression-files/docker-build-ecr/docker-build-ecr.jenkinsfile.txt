   docker-build-ecr.run()
      docker-build-ecr.legacySCM(groovy.lang.Closure)
      docker-build-ecr.library({identifier=jenkins@20211123, retriever=null})
      docker-build-ecr.pipeline(groovy.lang.Closure)
         docker-build-ecr.timeout({time=3, unit=HOURS})
         docker-build-ecr.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk14, reuseNode:false, stages:[:], args:-u root -v /var/run/docker.sock:/var/run/docker.sock, alwaysPull:false, containerPerStageRoot:false, label:Jenkins-Agent-al2-x64-c54xlarge-Docker-Host]])
         docker-build-ecr.stage(check-params, groovy.lang.Closure)
            docker-build-ecr.script(groovy.lang.Closure)
               docker-build-ecr.sh(
        curl -L https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz \
            -o go-containerregistry.tar.gz
        tar -zxvf go-containerregistry.tar.gz
        chmod +x gcrane
        mv gcrane /usr/local/bin/
      )
         docker-build-ecr.stage(docker-build-dockerhub-staging, groovy.lang.Closure)
            docker-build-ecr.script(groovy.lang.Closure)
               docker-build-ecr.git({url=https://github.com/opensearch-project/opensearch-build, branch=main})
               docker-build-ecr.usernamePassword({credentialsId=jenkins-staging-docker-staging-credential, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
               docker-build-ecr.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                  docker-build-ecr.sh(
                                set -e
                                docker logout && docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && eval $DOCKER_BUILD_SCRIPT_WITH_COMMANDS
                           )
         docker-build-ecr.stage(docker-ecr-staging, groovy.lang.Closure)
            docker-build-ecr.script(groovy.lang.Closure)
               docker-build-ecr.copyDockerImage({sourceImagePath=opensearchstaging/ci-runner-staging:latest, destinationImagePath=public.ecr.aws/m0o1u6w1/ci-runner-staging:latest, destinationType=ecr, destinationCredentialIdentifier=public.ecr.aws/m0o1u6w1, accountName=aws_account_public})
                  copyDockerImage.sh(docker logout)
                  copyDockerImage.withAWS({role=Upload_ECR_Image, roleAccount=aws_account_public, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyDockerImage.sh(
                aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/m0o1u6w1
                gcrane cp opensearchstaging/ci-runner-staging:latest public.ecr.aws/m0o1u6w1/ci-runner-staging:latest
            )
         docker-build-ecr.script(groovy.lang.Closure)
            docker-build-ecr.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
            docker-build-ecr.sh(docker logout && docker image prune -f --all)
