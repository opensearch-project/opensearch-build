   sign-standalone-artifacts.run()
      sign-standalone-artifacts.legacySCM(groovy.lang.Closure)
      sign-standalone-artifacts.library({identifier=jenkins@20211123, retriever=null})
      sign-standalone-artifacts.pipeline(groovy.lang.Closure)
         sign-standalone-artifacts.echo(Executing on agent [docker:[image:opensearchstaging/ci-runner:ci-runner-centos7-v1, reuseNode:false, stages:[:], args:, alwaysPull:true, containerPerStageRoot:false, label:Jenkins-Agent-al2-x64-c54xlarge-Docker-Host]])
         sign-standalone-artifacts.stage(sign, groovy.lang.Closure)
            sign-standalone-artifacts.script(groovy.lang.Closure)
               sign-standalone-artifacts.sh(mkdir /tmp/workspace/artifacts)
               sign-standalone-artifacts.sh(curl -SL https://www.dummy.com/dummy_1_artifact.tar.gz -o /tmp/workspace/artifacts/dummy_1_artifact.tar.gz)
               sign-standalone-artifacts.sh(curl -SL https://www.dummy.com/dummy_2_artifact.tar.gz -o /tmp/workspace/artifacts/dummy_2_artifact.tar.gz)
               sign-standalone-artifacts.signArtifacts({artifactPath=/tmp/workspace/artifacts, sigtype=.sig, platform=linux})
                  signArtifacts.fileExists(/tmp/workspace/sign.sh)
                  signArtifacts.git({url=https://github.com/opensearch-project/opensearch-build.git, branch=main})
                  signArtifacts.sh(curl -sSL https://artifacts.opensearch.org/publickeys/opensearch.pgp | gpg --import -)
                  signArtifacts.usernamePassword({credentialsId=github_bot_token_name, usernameVariable=GITHUB_USER, passwordVariable=GITHUB_TOKEN})
                  signArtifacts.withCredentials([[GITHUB_USER, GITHUB_TOKEN]], groovy.lang.Closure)
                     signArtifacts.sh(
            #!/bin/bash
            set +x
            export ROLE=dummy_signer_client_role
            export EXTERNAL_ID=signer_client_external_id
            export UNSIGNED_BUCKET=signer_client_unsigned_bucket
            export SIGNED_BUCKET=signer_client_signed_bucket

            /tmp/workspace/sign.sh /tmp/workspace/artifacts --sigtype=.sig --platform=linux
        )
               sign-standalone-artifacts.uploadToS3({sourcePath=/tmp/workspace/artifacts, bucket=dummy_bucket_name, path=sign_artifacts_job/dummy/upload/path/20/dist/signed})
                  uploadToS3.withAWS({role=Dummy_Upload_Role, roleAccount=dummy_account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadToS3.s3Upload({file=/tmp/workspace/artifacts, bucket=dummy_bucket_name, path=sign_artifacts_job/dummy/upload/path/20/dist/signed})
               sign-standalone-artifacts.printArtifactDownloadUrlsForStaging({artifactFileNames=[dummy_1_artifact.tar.gz, dummy_1_artifact.tar.gz.sig, dummy_2_artifact.tar.gz, dummy_2_artifact.tar.gz.sig], uploadPath=sign_artifacts_job/dummy/upload/path/20/dist/signed})
                  printArtifactDownloadUrlsForStaging.echo(File dummy_1_artifact.tar.gz can be accessed using the url - https://ci.opensearch.org/ci/dbc/sign_artifacts_job/dummy/upload/path/20/dist/signed/dummy_1_artifact.tar.gz)
                  printArtifactDownloadUrlsForStaging.echo(File dummy_1_artifact.tar.gz.sig can be accessed using the url - https://ci.opensearch.org/ci/dbc/sign_artifacts_job/dummy/upload/path/20/dist/signed/dummy_1_artifact.tar.gz.sig)
                  printArtifactDownloadUrlsForStaging.echo(File dummy_2_artifact.tar.gz can be accessed using the url - https://ci.opensearch.org/ci/dbc/sign_artifacts_job/dummy/upload/path/20/dist/signed/dummy_2_artifact.tar.gz)
                  printArtifactDownloadUrlsForStaging.echo(File dummy_2_artifact.tar.gz.sig can be accessed using the url - https://ci.opensearch.org/ci/dbc/sign_artifacts_job/dummy/upload/path/20/dist/signed/dummy_2_artifact.tar.gz.sig)
         sign-standalone-artifacts.script(groovy.lang.Closure)
            sign-standalone-artifacts.postCleanup()
               postCleanup.cleanWs({disableDeferredWipeout=true, deleteDirs=true})
