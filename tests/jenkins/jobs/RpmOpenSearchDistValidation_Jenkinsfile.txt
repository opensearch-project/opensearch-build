   RpmOpenSearchDistValidation_Jenkinsfile.run()
      RpmOpenSearchDistValidation_Jenkinsfile.pipeline(groovy.lang.Closure)
         RpmOpenSearchDistValidation_Jenkinsfile.echo(Executing on agent [label:none])
         RpmOpenSearchDistValidation_Jenkinsfile.stage(validate RPM meta, groovy.lang.Closure)
            RpmOpenSearchDistValidation_Jenkinsfile.script(groovy.lang.Closure)
               RpmOpenSearchDistValidation_Jenkinsfile.rpmOpenSearchDistValidation({bundleManifest=tests/jenkins/data/opensearch-1.3.1-x64-rpm.yml, rpmDistribution=/tmp/workspace/opensearch-1.3.1-linux-x64.rpm})
                  rpmOpenSearchDistValidation.legacySCM(groovy.lang.Closure)
                  rpmOpenSearchDistValidation.library({identifier=jenkins@20211123, retriever=null})
                  rpmOpenSearchDistValidation.readYaml({file=tests/jenkins/data/opensearch-1.3.1-x64-rpm.yml})
                  BundleManifest.asBoolean()
                  BundleManifest.getNames()
                  rpmOpenSearchDistValidation.rpmMetaValidation({rpmDistribution=/tmp/workspace/opensearch-1.3.1-linux-x64.rpm, refMap={Name=opensearch, Version=1.3.1, Architecture=x64, Group=Application/Internet, License=Apache-2.0, Relocations=(not relocatable), URL=https://opensearch.org/, Summary=An open source distributed and RESTful search engine, Description=OpenSearch makes it easy to ingest, search, visualize, and analyze your data.
For more information, see: https://opensearch.org/}})
                     rpmMetaValidation.sh({script=rpm -qip /tmp/workspace/opensearch-1.3.1-linux-x64.rpm, returnStdout=true})
                     rpmMetaValidation.println(Meta data for Name is validated)
                     rpmMetaValidation.println(Meta data for Version is validated)
                     rpmMetaValidation.println(Meta data for Architecture is validated)
                     rpmMetaValidation.println(Meta data for Group is validated)
                     rpmMetaValidation.println(Meta data for License is validated)
                     rpmMetaValidation.println(Meta data for Relocations is validated)
                     rpmMetaValidation.println(Meta data for URL is validated)
                     rpmMetaValidation.println(Meta data for Summary is validated)
                     rpmMetaValidation.println(Meta data for Description is validated)
                  rpmOpenSearchDistValidation.sh(sudo yum install -y /tmp/workspace/opensearch-1.3.1-linux-x64.rpm)
                  rpmOpenSearchDistValidation.sh([[ -d /etc/opensearch ]] && echo "/etc/opensearch directory exists"|| (echo "/etc/opensearch does not exist" && exit 1))
                  rpmOpenSearchDistValidation.sh({script=ls /etc/opensearch, returnStdout=true})
                  rpmOpenSearchDistValidation.println(esnode-key.pem is found existed)
                  rpmOpenSearchDistValidation.println(kirk.pem is found existed)
                  rpmOpenSearchDistValidation.println(esnode.pem is found existed)
                  rpmOpenSearchDistValidation.println(kirk-key.pem is found existed)
                  rpmOpenSearchDistValidation.println(root-ca.pem is found existed)
                  rpmOpenSearchDistValidation.sh([[ -f /var/log/opensearch/install_demo_configuration.log ]] && echo "install_demo_configuration.log exists" || (echo "install_demo_configuration.log does not exist" && exit 1))
                  rpmOpenSearchDistValidation.sh({script=cat /var/log/opensearch/install_demo_configuration.log, returnStdout=true})
                  rpmOpenSearchDistValidation.sh(sudo systemctl restart opensearch)
                  rpmOpenSearchDistValidation.rpmStatusValidation({name=opensearch})
                     rpmStatusValidation.sh({script=sudo systemctl status opensearch, returnStdout=true})
                  rpmOpenSearchDistValidation.sh({script=curl -s "https://localhost:9200" -u admin:admin --insecure, returnStdout=true})
                  rpmOpenSearchDistValidation.sh({script=curl -s "https://localhost:9200/_cluster/health?pretty" -u admin:admin --insecure, returnStdout=true})
                  rpmOpenSearchDistValidation.sh({script=curl -s "https://localhost:9200/_cat/plugins?v" -u admin:admin --insecure, returnStdout=true})
                  BundleManifest.getLocation(job-scheduler)
                  BundleManifest.getLocation(ml-commons)
                  BundleManifest.getLocation(alerting)
                  rpmOpenSearchDistValidation.sh(sudo systemctl stop opensearch)
                  rpmOpenSearchDistValidation.sh(sudo yum remove -y opensearch)
