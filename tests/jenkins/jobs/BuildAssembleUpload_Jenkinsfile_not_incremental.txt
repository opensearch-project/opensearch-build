   BuildAssembleUpload_Jenkinsfile.run()
      BuildAssembleUpload_Jenkinsfile.pipeline(groovy.lang.Closure)
         BuildAssembleUpload_Jenkinsfile.echo(Executing on agent [label:none])
         BuildAssembleUpload_Jenkinsfile.stage(build and assemble, groovy.lang.Closure)
            BuildAssembleUpload_Jenkinsfile.script(groovy.lang.Closure)
               BuildAssembleUpload_Jenkinsfile.buildAssembleUpload({dryRun=true, manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                  buildAssembleUpload.legacySCM(groovy.lang.Closure)
                  buildAssembleUpload.library({identifier=jenkins@20211123, retriever=null})
                  buildAssembleUpload.getManifestSHA({dryRun=true, manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                     getManifestSHA.buildManifest({dryRun=true, manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64, lock=true})
                        buildManifest.sh(echo ./build.sh tests/jenkins/data/opensearch-1.3.0.yml -p linux -a x64 --lock)
                     getManifestSHA.sha1(tests/jenkins/data/opensearch-1.3.0.yml)
                     getManifestSHA.echo(Manifest SHA: sha1)
                     getManifestSHA.legacySCM(groovy.lang.Closure)
                     getManifestSHA.library({identifier=jenkins@20211123, retriever=null})
                     getManifestSHA.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml})
                     InputManifest.asBoolean()
                     InputManifest.getSHAsRoot(vars-build, linux, x64)
                     getManifestSHA.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        getManifestSHA.s3DoesObjectExist({bucket=artifact-bucket, path=vars-build/1.3.0/shas/linux/x64/sha1.yml})
                  buildAssembleUpload.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml})
                  InputManifest.asBoolean()
                  buildAssembleUpload.buildManifest({dryRun=true, manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                     buildManifest.sh(echo ./build.sh tests/jenkins/data/opensearch-1.3.0.yml -p linux -a x64)
                  buildAssembleUpload.assembleManifest({dryRun=true, manifest=tests/data/opensearch-build-1.1.0.yml, platform=linux, architecture=x64})
                     assembleManifest.legacySCM(groovy.lang.Closure)
                     assembleManifest.library({identifier=jenkins@20211123, retriever=null})
                     assembleManifest.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                     assembleManifest.sh(echo ./assemble.sh "tests/data/opensearch-build-1.1.0.yml" --base-url https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64)
                  buildAssembleUpload.uploadArtifacts({dryRun=true, manifest=tests/data/opensearch-build-1.1.0.yml, platform=linux, architecture=x64})
                     uploadArtifacts.legacySCM(groovy.lang.Closure)
                     uploadArtifacts.library({identifier=jenkins@20211123, retriever=null})
                     uploadArtifacts.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRoot(vars-build, 33)
                     uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                     uploadArtifacts.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        uploadArtifacts.echo(s3Upload(file: 'builds', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/builds))
                        uploadArtifacts.echo(s3Upload(file: 'dist', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/dist))
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                     Messages.asBoolean()
                     Messages.add(stage, https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml)
                        uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml})
                        uploadArtifacts.stash({includes=messages/*, name=messages-stage})
                  buildAssembleUpload.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     buildAssembleUpload.echo(s3Upload(bucket: artifact-bucket, file: tests/jenkins/data/opensearch-1.3.0.yml, path: vars-build/1.3.0/shas/linux/x64/sha1.yml))
                  InputManifest.getPublicDistUrl(https://ci.opensearch.org/dbc, vars-build, 33, linux, x64)
                  buildAssembleUpload.echo(Setting env."ARTIFACT_URL_linux_x64"=https://ci.opensearch.org/dbc/vars-build/1.3.0/33/linux/x64/dist/opensearch/opensearch-1.3.0-linux-x64.tar.gz)
