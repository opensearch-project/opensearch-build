   uploadMinSnapshotsToS3_Jenkinsfile.run()
      uploadMinSnapshotsToS3_Jenkinsfile.legacySCM(groovy.lang.Closure)
      uploadMinSnapshotsToS3_Jenkinsfile.library({identifier=jenkins@20211123, retriever=null})
      uploadMinSnapshotsToS3_Jenkinsfile.pipeline(groovy.lang.Closure)
         uploadMinSnapshotsToS3_Jenkinsfile.echo(Executing on agent [label:none])
         uploadMinSnapshotsToS3_Jenkinsfile.stage(uploadMinSnapshotsToS3, groovy.lang.Closure)
            uploadMinSnapshotsToS3_Jenkinsfile.script(groovy.lang.Closure)
               uploadMinSnapshotsToS3_Jenkinsfile.createSha512Checksums()
               uploadMinSnapshotsToS3_Jenkinsfile.uploadMinSnapshotsToS3({fileActions=[groovy.lang.Closure], manifest=tests/jenkins/data/opensearch-1.3.0.yml})
                  uploadMinSnapshotsToS3.legacySCM(groovy.lang.Closure)
                  uploadMinSnapshotsToS3.library({identifier=jenkins@20211123, retriever=null})
                  uploadMinSnapshotsToS3.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml})
                  InputManifest.asBoolean()
                  uploadMinSnapshotsToS3.echo(Retreving build manifest from: tests/data/builds/opensearch/manifest.yml)
                  uploadMinSnapshotsToS3.readYaml({file=tests/data/builds/opensearch/manifest.yml})
                  BuildManifest.asBoolean()
                  uploadMinSnapshotsToS3.echo(Create .sha512 for Min Snapshots Artifacts)
                  createSha512Checksums.sh({script=find tests/data/builds/opensearch/dist -type f, returnStdout=true})
                  createSha512Checksums.echo(Creating sha for opensearch-min-1.3.0-linux-x64.tar.gz)
                  createSha512Checksums.sh({script=sha512sum opensearch-min-1.3.0-linux-x64.tar.gz, returnStdout=true})
                  createSha512Checksums.sh({script=basename ccc, returnStdout=true})
                  createSha512Checksums.writeFile({file=opensearch-min-1.3.0-linux-x64.tar.gz.sha512, text=bbb  
bbb
ccc
})
                  createSha512Checksums.echo(Creating sha for opensearch-dashboards-min-1.3.0-linux-x64.tar.gz)
                  createSha512Checksums.sh({script=sha512sum opensearch-dashboards-min-1.3.0-linux-x64.tar.gz, returnStdout=true})
                  createSha512Checksums.sh({script=basename ccc, returnStdout=true})
                  createSha512Checksums.writeFile({file=opensearch-dashboards-min-1.3.0-linux-x64.tar.gz.sha512, text=bbb  
bbb
ccc
})
                  uploadMinSnapshotsToS3.sh(
        cp tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64.tar.gz tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz
        cp tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64.tar.gz.sha512 tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512
        sed -i "s/.tar.gz/-latest.tar.gz/g" tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512
    )
                  uploadMinSnapshotsToS3.withAWS({role=dummy_role, roleAccount=1234, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadMinSnapshotsToS3.s3Upload({file=tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz, bucket=dummy_bucket, path=snapshots/core/opensearch/1.2.2-SNAPSHOT/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz})
                     uploadMinSnapshotsToS3.s3Upload({file=tests/data/builds/opensearch/dist/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512, bucket=dummy_bucket, path=snapshots/core/opensearch/1.2.2-SNAPSHOT/opensearch-min-1.2.2-SNAPSHOT-linux-x64-latest.tar.gz.sha512})
