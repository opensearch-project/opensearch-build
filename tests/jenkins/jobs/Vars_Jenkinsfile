pipeline {
    agent none
    stages {
        stage('detect docker image + args') {
            steps {
                script { 
                    dockerAgent = detectDockerAgent(
                        manifest: 'manifests/1.2.0/opensearch-1.2.0.yml'
                    )
                    echo dockerAgent.image
                    echo dockerAgent.args
                }
            }
        }
        stage('all') {
            steps {
                script {
                    buildManifest(dryRun: true)
                    assembleManifest(
                        dryRun: true, 
                        manifest: 'tests/data/opensearch-build-1.1.0.yml'
                    )
                    uploadArtifacts(dryRun: true)
                    uploadTestResults(
                        dryRun: true,
                        manifest: 'tests/data/opensearch-build-1.1.0.yml',
                        jobName: 'vars-build',
                        buildNumber: '33'
                    )
                }
            }
            post {
                always {
                    postCleanup()
                }
            }
        }
        stage('buildAssembleUpload') {
            steps {
                script {
                    buildAssembleUpload(
                        dryRun: true,
                        platform: 'linux',
                        architecture: 'x64'
                    )
                }
            }
            post {
                always {
                    postCleanup()
                }
            }
        }
        stage('buildDockerImage') {
            steps {
                script {
                    buildDockerImage(
                        dryRun: true,
                        manifest: 'manifests/1.2.0/opensearch-1.2.0.yml'
                    )
                }
            }
        }
        stage('notify') {
            steps {
                script {
                    publishNotification(
                        dryRun: true,
                        icon: ':white_check_mark:',
                        message: 'Successful Build',
                        extra: 'extra',
                        credentialsId: 'BUILD_NOTICE_WEBHOOK'
                    )
                }
            }
        }
    }
}
