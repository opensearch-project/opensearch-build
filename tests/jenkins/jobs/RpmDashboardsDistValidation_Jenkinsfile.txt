   RpmDashboardsDistValidation_Jenkinsfile.run()
      RpmDashboardsDistValidation_Jenkinsfile.pipeline(groovy.lang.Closure)
         RpmDashboardsDistValidation_Jenkinsfile.echo(Executing on agent [label:none])
         RpmDashboardsDistValidation_Jenkinsfile.stage(validate RPM meta, groovy.lang.Closure)
            RpmDashboardsDistValidation_Jenkinsfile.script(groovy.lang.Closure)
               RpmDashboardsDistValidation_Jenkinsfile.rpmDashboardsDistValidation({bundleManifest=tests/jenkins/data/opensearch-dashboards-1.3.0-x64-rpm.yml, rpmDistribution=/tmp/workspace/opensearch-dashboards-1.3.0-linux-x64.rpm})
                  rpmDashboardsDistValidation.legacySCM(groovy.lang.Closure)
                  rpmDashboardsDistValidation.library({identifier=jenkins@20211123, retriever=null})
                  rpmDashboardsDistValidation.readYaml({file=tests/jenkins/data/opensearch-dashboards-1.3.0-x64-rpm.yml})
                  BundleManifest.asBoolean()
                  BundleManifest.getNames()
                  rpmDashboardsDistValidation.sh(curl -SLO https://ci.opensearch.org/ci/dbc/Playground/tianleh-test/tianle-opensearch-build-3-22/1.3.0/latest/linux/x64/rpm/dist/opensearch/opensearch-1.3.0-linux-x64.rpm)
                  rpmDashboardsDistValidation.rpmMetaValidation({rpmDistribution=/tmp/workspace/opensearch-dashboards-1.3.0-linux-x64.rpm, refMap={Name=opensearch-dashboards, Version=1.3.0, Architecture=x64, Group=Application/Internet, License=Apache-2.0, Relocations=(not relocatable), URL=https://opensearch.org/, Summary=Open source visualization dashboards for OpenSearch, Description=OpenSearch Dashboards is the visualization tool for data in OpenSearch
For more information, see: https://opensearch.org/}})
                     rpmMetaValidation.sh({script=rpm -qip /tmp/workspace/opensearch-dashboards-1.3.0-linux-x64.rpm, returnStdout=true})
                     rpmMetaValidation.println(Meta data for Name is validated)
                     rpmMetaValidation.println(Meta data for Version is validated)
                     rpmMetaValidation.println(Meta data for Architecture is validated)
                     rpmMetaValidation.println(Meta data for Group is validated)
                     rpmMetaValidation.println(Meta data for License is validated)
                     rpmMetaValidation.println(Meta data for Relocations is validated)
                     rpmMetaValidation.println(Meta data for URL is validated)
                     rpmMetaValidation.println(Meta data for Summary is validated)
                     rpmMetaValidation.println(Meta data for Description is validated)
                  rpmDashboardsDistValidation.packageManagerCall({call=install, product=/tmp/workspace/opensearch-1.3.0-linux-x64.rpm})
                     packageManagerCall.sh(yum install -y /tmp/workspace/opensearch-1.3.0-linux-x64.rpm)
                  rpmDashboardsDistValidation.packageManagerCall({call=install, product=/tmp/workspace/opensearch-dashboards-1.3.0-linux-x64.rpm})
                     packageManagerCall.sh(yum install -y /tmp/workspace/opensearch-dashboards-1.3.0-linux-x64.rpm)
                  rpmDashboardsDistValidation.processManagerCall({call=start, product=opensearch})
                     processManagerCall.sh(systemctl start opensearch)
                  rpmDashboardsDistValidation.processManagerCall({call=start, product=opensearch-dashboards})
                     processManagerCall.sh(systemctl start opensearch-dashboards)
                  rpmDashboardsDistValidation.processManagerCall({call=status, product=opensearch-dashboards})
                     processManagerCall.sh({script=systemctl status opensearch-dashboards, returnStdout=true})
                  rpmDashboardsDistValidation.sh({script=curl -s "http://localhost:5601/api/status", returnStatus=true})
                  rpmDashboardsDistValidation.sh({script=curl -s "http://localhost:5601/api/status", returnStdout=true})
                  rpmDashboardsDistValidation.readJSON({text=['name':'dummy_desktop', 'uuid':'c4677c7a-d76f-45eb-a124-7e30d2b10e4b', 'version':['number':'1.3.0', 'build_hash':'00e06934211e9819f99aabbf139885682f33e95e', 'build_number':1, 'build_snapshot':false], 'status':['overall':['since':'2022-04-07T21:54:39.960Z', 'state':'green', 'title':'Green', 'nickname':'Looking good', 'icon':'success', 'uiColor':'secondary']]]})
                  rpmDashboardsDistValidation.sh({script=/usr/share/opensearch-dashboards/bin/opensearch-dashboards-plugin list --allow-root, returnStdout=true})
                  BundleManifest.getLocation(ganttChartDashboards)
                  BundleManifest.getLocation(anomalyDetectionDashboards)
                  BundleManifest.getLocation(securityDashboards)
                  BundleManifest.getLocation(reportsDashboards)
                  rpmDashboardsDistValidation.processManagerCall({call=stop, product=opensearch-dashboards})
                     processManagerCall.sh(systemctl stop opensearch-dashboards)
                  rpmDashboardsDistValidation.packageManagerCall({call=remove, product=opensearch-dashboards})
                     packageManagerCall.sh(yum remove -y opensearch-dashboards)
                  rpmDashboardsDistValidation.processManagerCall({call=stop, product=opensearch})
                     processManagerCall.sh(systemctl stop opensearch)
                  rpmDashboardsDistValidation.packageManagerCall({call=remove, product=opensearch})
                     packageManagerCall.sh(yum remove -y opensearch)
