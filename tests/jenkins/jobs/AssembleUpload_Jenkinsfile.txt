   AssembleUpload_Jenkinsfile.run()
      AssembleUpload_Jenkinsfile.pipeline(groovy.lang.Closure)
         AssembleUpload_Jenkinsfile.echo(Executing on agent [label:none])
         AssembleUpload_Jenkinsfile.stage(assemble and upload, groovy.lang.Closure)
            AssembleUpload_Jenkinsfile.script(groovy.lang.Closure)
               AssembleUpload_Jenkinsfile.assembleUpload({manifest=tests/data/opensearch-build-1.1.0.yml})
                  assembleUpload.legacySCM(groovy.lang.Closure)
                  assembleUpload.library({identifier=jenkins@20211123, retriever=null})
                  assembleUpload.assembleManifest({manifest=tests/data/opensearch-build-1.1.0.yml})
                     assembleManifest.legacySCM(groovy.lang.Closure)
                     assembleManifest.library({identifier=jenkins@20211123, retriever=null})
                     assembleManifest.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                     assembleManifest.sh(./assemble.sh "tests/data/opensearch-build-1.1.0.yml" --base-url https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64)
                  assembleUpload.uploadArtifacts({manifest=tests/data/opensearch-build-1.1.0.yml})
                     uploadArtifacts.legacySCM(groovy.lang.Closure)
                     uploadArtifacts.library({identifier=jenkins@20211123, retriever=null})
                     uploadArtifacts.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRoot(vars-build, 33)
                     uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                     uploadArtifacts.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        uploadArtifacts.s3Upload({file=builds, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/builds})
                        uploadArtifacts.s3Upload({file=dist, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/dist})
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                     Messages.asBoolean()
                     Messages.add(stage, https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml)
                        uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml})
                        uploadArtifacts.stash({includes=messages/*, name=messages-stage})
                  assembleUpload.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  InputManifest.asBoolean()
                  assembleUpload.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  BuildManifest.asBoolean()
                  InputManifest.getPublicDistUrl(https://ci.opensearch.org/dbc, vars-build, 33, linux, x64)
                  assembleUpload.echo(Setting env."ARTIFACT_URL_linux_x64"=https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/opensearch-1.1.0-linux-x64.tar.gz)
