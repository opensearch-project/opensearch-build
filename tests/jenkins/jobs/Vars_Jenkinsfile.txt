   Vars_Jenkinsfile.run()
      Vars_Jenkinsfile.pipeline(groovy.lang.Closure)
         Vars_Jenkinsfile.echo(Executing on agent [label:none])
         Vars_Jenkinsfile.stage(all, groovy.lang.Closure)
            Vars_Jenkinsfile.script(groovy.lang.Closure)
               Vars_Jenkinsfile.buildManifest({dryRun=true})
                  buildManifest.sh(echo ./build.sh manifests/2.0.0/opensearch-2.0.0.yml)
               Vars_Jenkinsfile.assembleManifest({dryRun=true, manifest=tests/data/opensearch-build-1.1.0.yml})
                  assembleManifest.legacySCM(groovy.lang.Closure)
                  assembleManifest.library({identifier=jenkins@20211122, retriever=null})
                  assembleManifest.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc/, vars-build, 33)
                  assembleManifest.sh(echo ./assemble.sh "tests/data/opensearch-build-1.1.0.yml" --base-url https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64)
               Vars_Jenkinsfile.uploadArtifacts({dryRun=true})
                  uploadArtifacts.legacySCM(groovy.lang.Closure)
                  uploadArtifacts.library({identifier=jenkins@20211122, retriever=null})
                  uploadArtifacts.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getArtifactRoot(vars-build, 33)
                  uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                  uploadArtifacts.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadArtifacts.echo(s3Upload(file: 'builds', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/builds))
                     uploadArtifacts.echo(s3Upload(file: 'dist', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/dist))
                  BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc/, vars-build, 33)
                  Messages.asBoolean()
                  Messages.add(stage, https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/builds/manifest.yml
https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/dist/manifest.yml)
                     uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/builds/manifest.yml
https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/dist/manifest.yml})
                     uploadArtifacts.stash({includes=messages/*, name=messages-stage})
               Vars_Jenkinsfile.uploadTestResults({dryRun=true, manifest=tests/data/opensearch-build-1.1.0.yml, jobName=vars-build, buildNumber=33})
                  uploadTestResults.legacySCM(groovy.lang.Closure)
                  uploadTestResults.library({identifier=jenkins@20211122, retriever=null})
                  uploadTestResults.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                  BuildManifest.asBoolean()
                  BuildManifest.getArtifactRoot(vars-build, 33)
                  uploadTestResults.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                  uploadTestResults.withAWS({role=opensearch-test, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     uploadTestResults.echo(s3Upload(file: 'test-results', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/test-results))
                  BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc/, vars-build, 33)
                  Messages.asBoolean()
                  Messages.add(stage, https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/test-results/)
                     uploadTestResults.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/test-results/})
                     uploadTestResults.stash({includes=messages/*, name=messages-stage})
         Vars_Jenkinsfile.stage(buildAssembleUpload, groovy.lang.Closure)
            Vars_Jenkinsfile.script(groovy.lang.Closure)
               Vars_Jenkinsfile.buildAssembleUpload({dryRun=true, platform=linux, architecture=x64})
                  buildAssembleUpload.buildManifest({dryRun=true, platform=linux, architecture=x64, manifest=manifests/2.0.0/opensearch-2.0.0.yml, lock=true})
                     buildManifest.sh(echo ./build.sh manifests/2.0.0/opensearch-2.0.0.yml -p linux -a x64 --lock)
                  buildAssembleUpload.sha1(manifests/2.0.0/opensearch-2.0.0.yml)
                  buildAssembleUpload.echo(Manifest SHA: sha1)
                  buildAssembleUpload.legacySCM(groovy.lang.Closure)
                  buildAssembleUpload.library({identifier=jenkins@20211122, retriever=null})
                  buildAssembleUpload.readYaml({file=manifests/2.0.0/opensearch-2.0.0.yml})
                  InputManifest.asBoolean()
                  InputManifest.getSHAsRoot(vars-build, linux, x64)
                  buildAssembleUpload.buildManifest({dryRun=true, platform=linux, architecture=x64, manifest=manifests/2.0.0/opensearch-2.0.0.yml})
                     buildManifest.sh(echo ./build.sh manifests/2.0.0/opensearch-2.0.0.yml -p linux -a x64)
                  buildAssembleUpload.assembleManifest({dryRun=true, platform=linux, architecture=x64, manifest=tests/data/opensearch-build-1.1.0.yml})
                     assembleManifest.legacySCM(groovy.lang.Closure)
                     assembleManifest.library({identifier=jenkins@20211122, retriever=null})
                     assembleManifest.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc/, vars-build, 33)
                     assembleManifest.sh(echo ./assemble.sh "tests/data/opensearch-build-1.1.0.yml" --base-url https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64)
                  buildAssembleUpload.uploadArtifacts({dryRun=true, platform=linux, architecture=x64})
                     uploadArtifacts.legacySCM(groovy.lang.Closure)
                     uploadArtifacts.library({identifier=jenkins@20211122, retriever=null})
                     uploadArtifacts.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     BuildManifest.getArtifactRoot(vars-build, 33)
                     uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                     uploadArtifacts.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        uploadArtifacts.echo(s3Upload(file: 'builds', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/builds))
                        uploadArtifacts.echo(s3Upload(file: 'dist', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/dist))
                     BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc/, vars-build, 33)
                     Messages.asBoolean()
                     Messages.add(stage, https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/builds/manifest.yml
https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/dist/manifest.yml)
                        uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/builds/manifest.yml
https://ci.opensearch.org/dbc//vars-build/1.1.0/33/linux/x64/dist/manifest.yml})
                        uploadArtifacts.stash({includes=messages/*, name=messages-stage})
                  buildAssembleUpload.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     buildAssembleUpload.echo(s3Upload(bucket: artifact-bucket, file: manifests/2.0.0/opensearch-2.0.0.yml, path: vars-build/shas/2.0.0/linux/x64/sha1.yml))
         Vars_Jenkinsfile.stage(notify, groovy.lang.Closure)
            Vars_Jenkinsfile.script(groovy.lang.Closure)
               Vars_Jenkinsfile.publishNotification({dryRun=true, icon=:white_check_mark:, message=Successful Build, extra=extra, credentialsId=BUILD_NOTICE_WEBHOOK})
                  publishNotification.string({credentialsId=BUILD_NOTICE_WEBHOOK, variable=WEBHOOK_URL})
                  publishNotification.withCredentials([WEBHOOK_URL], groovy.lang.Closure)
                     publishNotification.sh(echo curl -XPOST --header "Content-Type: application/json" --data '{"result_text":":white_check_mark: vars-build [33] Successful Build
Build: http://jenkins.us-east-1.elb.amazonaws.com/job/vars/42
Manifest: 2.0.0/opensearch-2.0.0.yml
extra"}' "https://web/hook/url")
