   AssembleArchive_Jenkinsfile.run()
      AssembleArchive_Jenkinsfile.pipeline(groovy.lang.Closure)
         AssembleArchive_Jenkinsfile.echo(Executing on agent [label:none])
         AssembleArchive_Jenkinsfile.stage(assemble from archive, groovy.lang.Closure)
            AssembleArchive_Jenkinsfile.script(groovy.lang.Closure)
               AssembleArchive_Jenkinsfile.assembleArchive({dryRun=true, platform=linux, architecture=x64})
                  assembleArchive.echo(Read BUILD_SHA_linux_x64_[SHA|LOCK|PATH].)
                  assembleArchive.echo(sha.sha=sha1)
                  assembleArchive.echo(sha.lock=tests/jenkins/data/opensearch-1.3.0.yml.lock)
                  assembleArchive.echo(sha.path=assemble-upload-build/1.1.0/shas/linux/x64/sha1.yml)
                  assembleArchive.echo(Assembling sha1 (tests/jenkins/data/opensearch-1.3.0.yml.lock))
                  assembleArchive.specific(33)
                  assembleArchive.copyArtifacts({filter=sha1.zip, fingerprintArtifacts=true, projectName=vars-build, selector=null})
                  assembleArchive.unzip({zipFile=sha1.zip})
                  assembleArchive.legacySCM(groovy.lang.Closure)
                  assembleArchive.library({identifier=jenkins@20211123, retriever=null})
                  assembleArchive.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml.lock})
                  InputManifest.asBoolean()
                  assembleArchive.assembleUpload({dryRun=true, platform=linux, architecture=x64, manifest=tests/data/opensearch-build-1.1.0.yml, sha={sha=sha1, lock=tests/jenkins/data/opensearch-1.3.0.yml.lock, path=assemble-upload-build/1.1.0/shas/linux/x64/sha1.yml}})
                     assembleUpload.legacySCM(groovy.lang.Closure)
                     assembleUpload.library({identifier=jenkins@20211123, retriever=null})
                     assembleUpload.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                     BuildManifest.asBoolean()
                     assembleUpload.assembleManifest({dryRun=true, platform=linux, architecture=x64, manifest=tests/data/opensearch-build-1.1.0.yml, sha={sha=sha1, lock=tests/jenkins/data/opensearch-1.3.0.yml.lock, path=assemble-upload-build/1.1.0/shas/linux/x64/sha1.yml}})
                        assembleManifest.legacySCM(groovy.lang.Closure)
                        assembleManifest.library({identifier=jenkins@20211123, retriever=null})
                        assembleManifest.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                        BuildManifest.asBoolean()
                        BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                        assembleManifest.sh(echo ./assemble.sh "tests/data/opensearch-build-1.1.0.yml" --base-url https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64)
                     assembleUpload.uploadArtifacts({dryRun=true, platform=linux, architecture=x64, manifest=tests/data/opensearch-build-1.1.0.yml, sha={sha=sha1, lock=tests/jenkins/data/opensearch-1.3.0.yml.lock, path=assemble-upload-build/1.1.0/shas/linux/x64/sha1.yml}})
                        uploadArtifacts.legacySCM(groovy.lang.Closure)
                        uploadArtifacts.library({identifier=jenkins@20211123, retriever=null})
                        uploadArtifacts.readYaml({file=tests/data/opensearch-build-1.1.0.yml})
                        BuildManifest.asBoolean()
                        BuildManifest.getArtifactRoot(vars-build, 33)
                        uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                        uploadArtifacts.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           uploadArtifacts.echo(s3Upload(file: 'builds', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/builds))
                           uploadArtifacts.echo(s3Upload(file: 'dist', bucket: artifact-bucket, path: vars-build/1.1.0/33/linux/x64/dist))
                        BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                        Messages.asBoolean()
                        Messages.add(stage, https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml)
                           uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml})
                           uploadArtifacts.stash({includes=messages/*, name=messages-stage})
                     assembleUpload.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        assembleUpload.echo(s3Upload(bucket: artifact-bucket, file: tests/jenkins/data/opensearch-1.3.0.yml.lock, path: assemble-upload-build/1.1.0/shas/linux/x64/sha1.yml))
                     assembleUpload.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml.lock})
                     InputManifest.asBoolean()
                     InputManifest.getPublicDistUrl(https://ci.opensearch.org/dbc, vars-build, 33, linux, x64)
                     assembleUpload.echo(Setting env."ARTIFACT_URL_linux_x64"=https://ci.opensearch.org/dbc/vars-build/1.3.0/33/linux/x64/dist/opensearch/opensearch-1.3.0-linux-x64.tar.gz)
