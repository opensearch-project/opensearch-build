   BuildArchive_Jenkinsfile.run()
      BuildArchive_Jenkinsfile.pipeline(groovy.lang.Closure)
         BuildArchive_Jenkinsfile.echo(Executing on agent [label:none])
         BuildArchive_Jenkinsfile.stage(build and archive, groovy.lang.Closure)
            BuildArchive_Jenkinsfile.script(groovy.lang.Closure)
               BuildArchive_Jenkinsfile.buildArchive({manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                  buildArchive.legacySCM(groovy.lang.Closure)
                  buildArchive.library({identifier=jenkins@20211123, retriever=null})
                  buildArchive.getManifestSHA({manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                     getManifestSHA.buildManifest({manifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64, lock=true})
                        buildManifest.sh(./build.sh tests/jenkins/data/opensearch-1.3.0.yml -p linux -a x64 --lock)
                     getManifestSHA.sha1(tests/jenkins/data/opensearch-1.3.0.yml.lock)
                     getManifestSHA.echo(Manifest SHA: sha1)
                     getManifestSHA.legacySCM(groovy.lang.Closure)
                     getManifestSHA.library({identifier=jenkins@20211123, retriever=null})
                     getManifestSHA.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml.lock})
                     InputManifest.asBoolean()
                     InputManifest.getSHAsRoot(build-archive, linux, x64)
                     getManifestSHA.echo(Manifest lock: tests/jenkins/data/opensearch-1.3.0.yml.lock)
                     getManifestSHA.echo(Manifest SHA path: build-archive/1.3.0/shas/linux/x64/sha1.yml)
                     getManifestSHA.withAWS({role=opensearch-bundle, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                        getManifestSHA.s3DoesObjectExist({bucket=artifact-bucket, path=build-archive/1.3.0/shas/linux/x64/sha1.yml})
                     getManifestSHA.echo(Manifest SHA exists: false)
                  buildArchive.buildManifest({manifest=tests/jenkins/data/opensearch-1.3.0.yml.lock, platform=linux, architecture=x64})
                     buildManifest.sh(./build.sh tests/jenkins/data/opensearch-1.3.0.yml.lock -p linux -a x64)
                  buildArchive.echo(Archiving into sha1 zip: builds/**, tests/jenkins/data/opensearch-1.3.0.yml.lock)
                  buildArchive.zip({zipFile=sha1-builds.zip, archive=true, glob=builds/**})
                  buildArchive.zip({zipFile=sha1-manifest.zip, archive=true, glob=tests/jenkins/data/opensearch-1.3.0.yml.lock})
                  Messages.asBoolean()
                  Messages.add(stage, Built stage, sha1.)
                     buildArchive.writeFile({file=messages/stage.msg, text=Built stage, sha1.})
                     buildArchive.stash({includes=messages/*, name=messages-stage})
                  buildArchive.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml.lock})
                  InputManifest.asBoolean()
                  buildArchive.echo(Setting env.BUILD_SHA_darwin_x64_SHA=sha1)
                  buildArchive.echo(Setting env.BUILD_SHA_darwin_x64_LOCK=tests/jenkins/data/opensearch-1.3.0.yml.lock)
                  buildArchive.echo(Setting env.BUILD_SHA_darwin_x64_PATH=build-archive/1.3.0/shas/linux/x64/sha1.yml)
