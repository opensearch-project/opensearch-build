   CopyContainer_docker_Jenkinsfile.run()
      CopyContainer_docker_Jenkinsfile.pipeline(groovy.lang.Closure)
         CopyContainer_docker_Jenkinsfile.echo(Executing on agent [label:none])
         CopyContainer_docker_Jenkinsfile.stage(copyImage, groovy.lang.Closure)
            CopyContainer_docker_Jenkinsfile.script(groovy.lang.Closure)
               CopyContainer_docker_Jenkinsfile.copyDockerContainer({imageRepository=opensearchstaging/ci-runner, imageTag=2.0.0, latestTag=true, majorVersionTag=true, minorVersionTag=true})
                  copyDockerContainer.sh({script=test -f /usr/local/bin/gcrane && echo '1' || echo '0' , returnStdout=true})
                  copyDockerContainer.sh(docker logout)
                  copyDockerContainer.usernamePassword({credentialsId=jenkins-staging-docker-prod-token, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
                  copyDockerContainer.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                     copyDockerContainer.sh(
            docker login -u DOCKER_USERNAME -p DOCKER_PASSWORD
            gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 opensearchproject/opensearchstaging/ci-runner:2.0.0
        )
                  copyDockerContainer.echo(Tagging with latest for this docker image.)
                  copyDockerContainer.usernamePassword({credentialsId=jenkins-staging-docker-prod-token, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
                  copyDockerContainer.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                     copyDockerContainer.sh(
            docker login -u DOCKER_USERNAME -p DOCKER_PASSWORD
            gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 opensearchproject/opensearchstaging/ci-runner:latest
        )
                  copyDockerContainer.echo(Tagging with its major version for this docker image.)
                  copyDockerContainer.usernamePassword({credentialsId=jenkins-staging-docker-prod-token, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
                  copyDockerContainer.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                     copyDockerContainer.sh(
            docker login -u DOCKER_USERNAME -p DOCKER_PASSWORD
            gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 opensearchproject/opensearchstaging/ci-runner:2
        )
                  copyDockerContainer.echo(Tagging with its major and minor version for this docker image.)
                  copyDockerContainer.usernamePassword({credentialsId=jenkins-staging-docker-prod-token, usernameVariable=DOCKER_USERNAME, passwordVariable=DOCKER_PASSWORD})
                  copyDockerContainer.withCredentials([[DOCKER_USERNAME, DOCKER_PASSWORD]], groovy.lang.Closure)
                     copyDockerContainer.sh(
            docker login -u DOCKER_USERNAME -p DOCKER_PASSWORD
            gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 opensearchproject/opensearchstaging/ci-runner:2.0
        )
               CopyContainer_docker_Jenkinsfile.copyECRContainer({imageRepository=opensearchstaging/ci-runner, imageTag=2.0.0, latestTag=true, majorVersionTag=true, minorVersionTag=true})
                  copyECRContainer.sh({script=test -f /usr/local/bin/gcrane && echo '1' || echo '0' , returnStdout=true})
                  copyECRContainer.sh(docker logout)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=DUMMY_ACCOUNT_NAME, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 public.ecr.aws/p5f6l6i3/opensearchstaging/ci-runner:2.0.0
           )
                  copyECRContainer.echo(Tagging with latest for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=DUMMY_ACCOUNT_NAME, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 public.ecr.aws/p5f6l6i3/opensearchstaging/ci-runner:latest
           )
                  copyECRContainer.echo(Tagging with its major version for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=DUMMY_ACCOUNT_NAME, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 public.ecr.aws/p5f6l6i3/opensearchstaging/ci-runner:2
           )
                  copyECRContainer.echo(Tagging with its major and minor version for this ECR image.)
                  copyECRContainer.withAWS({role=Upload_ECR_Image, roleAccount=DUMMY_ACCOUNT_NAME, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                     copyECRContainer.sh(
               aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "public.ecr.aws/p5f6l6i3"
               gcrane cp opensearchstaging/opensearchstaging/ci-runner:2.0.0 public.ecr.aws/p5f6l6i3/opensearchstaging/ci-runner:2.0
           )
