   ArchiveAssembleUpload_Jenkinsfile.run()
      ArchiveAssembleUpload_Jenkinsfile.pipeline(groovy.lang.Closure)
         ArchiveAssembleUpload_Jenkinsfile.echo(Executing on agent [label:none])
         ArchiveAssembleUpload_Jenkinsfile.stage(assemble from archive, groovy.lang.Closure)
            ArchiveAssembleUpload_Jenkinsfile.script(groovy.lang.Closure)
               ArchiveAssembleUpload_Jenkinsfile.archiveAssembleUpload({inputManifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64})
                  archiveAssembleUpload.legacySCM(groovy.lang.Closure)
                  archiveAssembleUpload.library({identifier=jenkins@20211123, retriever=null})
                  archiveAssembleUpload.readYaml({file=tests/jenkins/data/opensearch-1.3.0.yml})
                  InputManifest.asBoolean()
                  archiveAssembleUpload.echo(Assembling tests/jenkins/data/opensearch-1.3.0.yml)
                  archiveAssembleUpload.specific(33)
                  archiveAssembleUpload.copyArtifacts({filter=*.zip, fingerprintArtifacts=true, projectName=vars-build, selector=null})
                  archiveAssembleUpload.unzip({zipFile=archived-builds.zip})
                  archiveAssembleUpload.readYaml({file=builds/opensearch/manifest.yml})
                  BuildManifest.asBoolean()
                  archiveAssembleUpload.assembleUpload({inputManifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64, buildManifest=builds/opensearch/manifest.yml})
                     assembleUpload.legacySCM(groovy.lang.Closure)
                     assembleUpload.library({identifier=jenkins@20211123, retriever=null})
                     assembleUpload.assembleManifest({inputManifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64, buildManifest=builds/opensearch/manifest.yml})
                        assembleManifest.legacySCM(groovy.lang.Closure)
                        assembleManifest.library({identifier=jenkins@20211123, retriever=null})
                        assembleManifest.readYaml({file=builds/opensearch/manifest.yml})
                        BuildManifest.asBoolean()
                        BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                        assembleManifest.sh(./assemble.sh "builds/opensearch/manifest.yml" --base-url https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64)
                     assembleUpload.uploadArtifacts({inputManifest=tests/jenkins/data/opensearch-1.3.0.yml, platform=linux, architecture=x64, buildManifest=builds/opensearch/manifest.yml})
                        uploadArtifacts.legacySCM(groovy.lang.Closure)
                        uploadArtifacts.library({identifier=jenkins@20211123, retriever=null})
                        uploadArtifacts.readYaml({file=builds/opensearch/manifest.yml})
                        BuildManifest.asBoolean()
                        BuildManifest.getMinArtifact()
                        BuildManifest.getArtifactRoot(vars-build, 33)
                        uploadArtifacts.echo(Uploading to s3://artifact-bucket/vars-build/1.1.0/33/linux/x64)
                        uploadArtifacts.uploadToS3({sourcePath=builds, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/builds})
                           uploadToS3.withAWS({role=upload_role, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                              uploadToS3.s3Upload({file=builds, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/builds})
                        uploadArtifacts.uploadToS3({sourcePath=dist, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/dist})
                           uploadToS3.withAWS({role=upload_role, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                              uploadToS3.s3Upload({file=dist, bucket=artifact-bucket, path=vars-build/1.1.0/33/linux/x64/dist})
                        BuildManifest.getIndexFileRoot(vars-build)
                        uploadArtifacts.writeJSON({file=index.json, json={latest=33}})
                        uploadArtifacts.echo(Uploading index.json to s3://bucket/vars-build/1.1.0)
                        uploadArtifacts.uploadToS3({sourcePath=index.json, bucket=artifact-bucket, path=vars-build/1.1.0/index.json})
                           uploadToS3.withAWS({role=upload_role, roleAccount=account, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                              uploadToS3.s3Upload({file=index.json, bucket=artifact-bucket, path=vars-build/1.1.0/index.json})
                        uploadArtifacts.echo(Uploading to s3://bucket/vars-build/1.1.0/33/linux/x64)
                        uploadArtifacts.withAWS({role=role, roleAccount=dummy, duration=900, roleSessionName=jenkins-session}, groovy.lang.Closure)
                           uploadArtifacts.s3Upload({file=builds/opensearch/dist/opensearch-min-1.1.0-linux-x64.tar.gz, bucket=bucket, path=release-candidates/core/opensearch/1.1.0/})
                           uploadArtifacts.s3Upload({file=dist/opensearch/opensearch-1.1.0-linux-x64.tar.gz, bucket=bucket, path=release-candidates/bundle/opensearch/1.1.0/})
                        BuildManifest.getArtifactRootUrl(https://ci.opensearch.org/dbc, vars-build, 33)
                        Messages.asBoolean()
                        Messages.add(stage, https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml)
                           uploadArtifacts.writeFile({file=messages/stage.msg, text=https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/builds/opensearch/manifest.yml
https://ci.opensearch.org/dbc/vars-build/1.1.0/33/linux/x64/dist/opensearch/manifest.yml})
                           uploadArtifacts.stash({includes=messages/*, name=messages-stage})
