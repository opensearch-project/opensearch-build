lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    agent {
        docker {
            label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-v1'
            alwaysPull true
        }
    }
    parameters{
        string(
                name: 'ARTIFACT_PATH',
                trim: true,
                description: 'Path to the artifact or the artifact directory on s3'
        )
        choice(
                choices: ['linux'],
                name: 'DISTRIBUTION_PLATFORM',
                description: 'What platform is this distribution build for?'
        )
        choice(
                choices: ['.sig'],
                name: 'SIGNATURE_TYPE',
                description: 'What is signature file type?'
        )
    }
    stages {
        stage('sign') {
            steps {
                script {
                    if (ARTIFACT_PATH == '') {
                        currentBuild.result = 'ABORTED'
                        error('ARTIFACT_PATH is not set')
                    }
                    ARTIFACT_PATH = ARTIFACT_PATH.replaceAll('/$', "")
                    setUpSignArtifacts()
                    signArtifacts(
                            artifactPath: "$WORKSPACE/artifacts/${ARTIFACT_PATH}",
                            signatureType: SIGNATURE_TYPE,
                            distributionPlatform: DISTRIBUTION_PLATFORM
                    )

                    // uploading artifacts with signatures on s3
                    uploadToS3(
                            sourcePath: "$WORKSPACE/artifacts/${ARTIFACT_PATH}",
                            artifactBucket: "${ARTIFACT_BUCKET_NAME}",
                            destinationOnS3: "${ARTIFACT_PATH}/signed"
                    )
                }
            }
            post() {
                always {
                    script {
                        postCleanup()
                    }
                }
            }
        }
    }
}

void setUpSignArtifacts() {
    // clone opensearch-build to get signer workflow
    git url: 'https://github.com/opensearch-project/opensearch-build.git', branch: 'main'

    // download artifacts from s3 to sign to $WORKSPACE/artifacts/
    withAWS(role: "${ARTIFACT_DOWNLOAD_ROLE_NAME}", roleAccount: "${AWS_ACCOUNT_PUBLIC}", duration: 900, roleSessionName: 'jenkins-session') {
        s3Download(file: "$WORKSPACE/artifacts/", bucket: "${ARTIFACT_BUCKET_NAME}", path: "${ARTIFACT_PATH}/", force: true)
    }
}
