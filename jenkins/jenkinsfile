pipeline {
    agent {
        node {
            label 'Jenkins-Agent-al2-x64-m5xlarge'
        }
    }
    environment {
        ARTIFACT_PATH = "distribution-build-opensearch/${params.VERSION}/${params.BUILD_ID}/${params.PLATFORM}/${params.ARCH}/builds"
    }
    stages {
        stage('parameters') {
            steps {
                script {
                    properties([
                            parameters([
                                    string(
                                            defaultValue: 'x64',
                                            name: 'ARCH',
                                            trim: true
                                    ),
                                    string(
                                            defaultValue: 'linux',
                                            name: 'PLATFORM',
                                            trim: true
                                    ),
                                    string(
                                            name: 'BUILD_ID',
                                            trim: true
                                    ),
                                    string(
                                            name: 'VERSION',
                                            trim: true
                                    )
                            ])
                    ])
                }
            }
        }
        stage('sign') {
            environment {
              // These ENV variables are required by https://github.com/opensearch-project/opensearch-signer-client
              // This client is invoked internally by the sign script.
              ROLE = "${SIGNER_CLIENT_ROLE}"
              EXTERNAL_ID = "${SIGNER_CLIENT_EXTERNAL_ID}"
              UNSIGNED_BUCKET = "${SIGNER_CLIENT_UNSIGNED_BUCKET}"
              SIGNED_BUCKET = "${SIGNER_CLIENT_SIGNED_BUCKET}"
            }
            steps {
                script {
                  set_up()
                }
                // Fetch opensearch public key and add to keyring.
                sh('curl https://artifacts.opensearch.org/publickeys/opensearch.pgp -o $WORKSPACE/opensearch.pgp')
                sh('gpg --import $WORKSPACE/opensearch.pgp')

                // Sign artifacts
                withCredentials([usernamePassword(credentialsId: "${GITHUB_BOT_TOKEN_NAME}", usernameVariable: 'GITHUB_USER', passwordVariable: 'GITHUB_TOKEN')]) {
                    sh('$WORKSPACE/sign.sh $WORKSPACE/artifacts/$ARTIFACT_PATH/opensearch/manifest.yml --type maven')
                }

                // Upload signature files to S3
                withAWS(role: "${ARTIFACT_UPLOAD_ROLE_NAME}", roleAccount: "${AWS_ACCOUNT_PUBLIC}", duration: 900, roleSessionName:
                        'jenkins-session') {
                    // upload signature files to S3
                    s3Upload(file: "$WORKSPACE/artifacts/${ARTIFACT_PATH}/opensearch/maven", bucket: "${ARTIFACT_BUCKET_NAME}", path: "${ARTIFACT_PATH}/maven-signed")
                }
            }
        }
        stage('stage maven artifacts') {
            tools {
              maven "maven-3.8.2"
            }
            environment {
              REPO_URL = "https://aws.oss.sonatype.org/"
              STAGING_PROFILE_ID = "${SONATYPE_STAGING_PROFILE_ID}"
              BUILD_ID = "${params.BUILD_ID}"
            }
            steps {
                script {
                  set_up()
                }
                // stage artifacts for release with Sonatype
                withCredentials([usernamePassword(credentialsId: 'Sonatype', usernameVariable: 'SONATYPE_USERNAME', passwordVariable: 'SONATYPE_PASSWORD')]) {
                    sh('$WORKSPACE/publish/stage-maven-release.sh $WORKSPACE/artifacts/$ARTIFACT_PATH/maven-signed')
                }
            }
        }
    }
}

void set_up() {
  git url: 'https://github.com/opensearch-project/opensearch-build.git', branch: 'main'

  withAWS(role: "${ARTIFACT_DOWNLOAD_ROLE_NAME}", roleAccount: "${AWS_ACCOUNT_PUBLIC}", duration: 900, roleSessionName: 'jenkins-session') {
    s3Download(file: "$WORKSPACE/artifacts", bucket: "${ARTIFACT_BUCKET_NAME}", path: "${ARTIFACT_PATH}/", force: true)
  }
}
