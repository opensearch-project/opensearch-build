lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    agent {
        docker {
            label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-v1'
            alwaysPull true
        }
    }
    parameters {
        string(name: 'VERSION', description: 'The version of Data Prepper', trim: true)
        string(name: 'SOURCE_JOB_BASE_NAME', description: 'The name of the artifacts job', trim: true)
        string(name: 'SOURCE_BUILD_NUMBER', description: 'The build number of the artifacts job', trim: true)
    }
    stages {
        stage('Download Staging Artifacts') {
            steps {
                script {
                    downloadPath = ([
                        "${SOURCE_JOB_BASE_NAME}",
                        "${VERSION}",
                        "${SOURCE_BUILD_NUMBER}",
                        "builds",
                        "signed"
                    ].join('/'))

                    sh 'mkdir distribution'
                    sh "curl -SL https://ci.opensearch.org/ci/dbc/${downloadPath}/opensearch-data-prepper-${VERSION}-linux-x64.tar.gz -o distribution/opensearch-data-prepper-${VERSION}-linux-x64.tar.gz"
                    sh "curl -SL https://ci.opensearch.org/ci/dbc/${downloadPath}/opensearch-data-prepper-${VERSION}-linux-x64.tar.gz.sig -o distribution/opensearch-data-prepper-${VERSION}-linux-x64.tar.gz.sig"
                    sh "curl -SL https://ci.opensearch.org/ci/dbc/${downloadPath}/opensearch-data-prepper-jdk-${VERSION}-linux-x64.tar.gz -o distribution/opensearch-data-prepper-jdk-${VERSION}-linux-x64.tar.gz"
                    sh "curl -SL https://ci.opensearch.org/ci/dbc/${downloadPath}/opensearch-data-prepper-jdk-${VERSION}-linux-x64.tar.gz.sig -o distribution/opensearch-data-prepper-jdk-${VERSION}-linux-x64.tar.gz.sig"
                }
            }
        }
        stage('Upload Artifacts to Production Distribution Bucket') {
            steps {
                script {
                    withAWS(role: "${ARTIFACT_PROMOTION_ROLE_NAME}", roleAccount: "${AWS_ACCOUNT_ARTIFACT}", duration: 900, roleSessionName: 'jenkins-session') {
                        s3Upload(file: 'distribution/', bucket: "${ARTIFACT_PRODUCTION_BUCKET_NAME}", path: "data-prepper/${VERSION}/")
                    }
                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
