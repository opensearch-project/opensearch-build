/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

lib = library(identifier: 'jenkins@1.0.4', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/opensearch-project/opensearch-build-libraries.git',
]))

pipeline {
    options {
            timeout(time: 2, unit: 'HOURS')
    }
    agent {
        docker {
            label 'Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3'
            registryUrl 'https://public.ecr.aws/'
            alwaysPull true
        }
    }
    parameters {
        string(
            name: 'VERSION',
            description: 'Version of the release.',
            trim: true
        )
    }
    environment {
        OS_DISTRIBUTION_MANIFEST = "opensearch-$VERSION/manifest.yml"
        OSD_DISTRIBUTION_MANIFEST = "opensearch-dashboards-$VERSION/manifest.yml"
    }
    stages {
        stage('Create Release Tag for OpenSearch components') {
            steps {
                script {
                    os_artifact_url = "https://artifacts.opensearch.org/releases/bundle/opensearch/$VERSION/opensearch-$VERSION-linux-x64.tar.gz"
                    sh "curl -SLO $os_artifact_url && tar -xf opensearch-$VERSION-linux-x64.tar.gz ${OS_DISTRIBUTION_MANIFEST}"
                    echo "The release distribution manifest is downloaded to $OS_DISTRIBUTION_MANIFEST"
                    createReleaseTag(
                        distManifest: "$OS_DISTRIBUTION_MANIFEST",
                        tagVersion: VERSION
                    )
                }
            }
        }
        stage('Create Release Tag for OpenSearch-Dasboards components') {
            steps {
                script {
                    osd_artifact_url = "https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/$VERSION/opensearch-dashboards-$VERSION-linux-x64.tar.gz"
                    sh "curl -SLO $osd_artifact_url && tar -xf opensearch-dashboards-$VERSION-linux-x64.tar.gz ${OSD_DISTRIBUTION_MANIFEST}"
                    echo "The release distribution manifest is downloaded to $OSD_DISTRIBUTION_MANIFEST"
                    createReleaseTag(
                        distManifest: "$OSD_DISTRIBUTION_MANIFEST",
                        tagVersion: VERSION
                    )
                }
            }
        }
        stage('Lock Manifests to tags') {
            steps {
                echo 'Triggering manifest lock workflow'
                build job: 'release-manifest-commit-lock', wait: true, parameters: [
                    string(name: 'RELEASE_VERSION', value: "${params.VERSION}"),
                    string(name: 'MANIFEST_LOCK_ACTION', value: "UPDATE_TO_TAGS")
                    ]
                echo 'Pull Request to lock manifest created successfully!'
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
