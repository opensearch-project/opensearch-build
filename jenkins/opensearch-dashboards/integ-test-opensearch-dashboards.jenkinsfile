lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    agent none
    parameters {
        string(
            defaultValue: '',
            name: 'opensearch_version',
            description: 'OpenSearch version to run test on',
            trim: true
        )

        string(
            defaultValue: '',
            name: 'opensearch_dashboards_version',
            description: 'OpenSearch Dashboards version to run test on',
            trim: true
        )
        string(
            defaultValue: '',
            name: 'opensearch_build_id',
            description: 'The build number of OpenSearch for which tests should be run',
            trim: true
        )
        string(
            defaultValue: '',
            name: 'opensearch_dashboards_build_id',
            description: 'The build number of OpenSearch Dashboards for which tests should be run',
            trim: true
        )
        string(
            defaultValue: '',
            name: 'architecture',
            description: 'Architecture of the build of OpenSearch/OpenSearch Dashboards',
            trim: true
        )
        string(
            defaultValue: '',
            name: 'platform',
            description: 'Platform of the build of OpenSearch/OpenSearch Dashboards',
            trim: true
        )
    }
    stages {
        stage('integ-test') {
            agent {
                docker {
                    label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
                    image 'opensearchstaging/ci-runner:centos7-x64-arm64-jdkmulti-node10.24.1-cypress6.9.1-20211028'
                    alwaysPull true
                }
            }
            steps {
                script {
                    basePathOpenSearch = "https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/${opensearch_version}/${opensearch_build_id}/${platform}/${architecture}"
                    basePathOpenSearchDashboards = "https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/${opensearch_dashboards_version}/${opensearch_dashboards_build_id}/${platform}/${architecture}"

                    sh "wget ${basePathOpenSearchDashboards}/builds/opensearch-dashboards/manifest.yml"
                    sh "./test.sh integ-test manifests/${opensearch_dashboards_version}/opensearch-dashboards-${opensearch_dashboards_version}-test.yml -p opensearch=${basePathOpenSearch} opensearch-dashboards=${basePathOpenSearchDashboards} --test-run-id ${env.BUILD_NUMBER}"
                }
            }
            post {
                always {
                    postCleanup()
                }
            }
        }
    }
    post {
        success {
            node('Jenkins-Agent-al2-x64-c54xlarge-Docker-Host') {
                script {
                    postCleanup()
                }
            }
        }
        failure {
            node('Jenkins-Agent-al2-x64-c54xlarge-Docker-Host') {
                script {
                    postCleanup()
                }
            }
        }
    }
}
