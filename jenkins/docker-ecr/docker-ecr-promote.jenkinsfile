lib = library(identifier: 'jenkins@20211123', retriever: legacySCM(scm))

pipeline {
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    agent {
        docker {
            label 'Jenkins-Agent-al2-x64-c54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ubuntu2004-x64-docker-buildx0.6.3-qemu5.0-awscli1.22-jdk14'
            args '-u root'
        }
    }
    parameters {
        string(
            name: 'IMAGE_REPOSITORY',
            description: 'Image Repository on staging Eg: ci-runner',
            trim: true
        )
        string(
            name: 'IMAGE_TAG',
            description: 'Image tag on staging. Eg: 1.3.0',
            trim: true
        )
        booleanParam(
            name: 'DOCKER_HUB',
            defaultValue: true,
            description: 'Promote to docker hub platform.'
        )
        booleanParam(
            name: 'ECR',
            defaultValue: true,
            description: 'Promote to AWS ECR platform.'
        )
        booleanParam(
            name: 'TAG_LATEST',
            defaultValue: true,
            description: 'Tag the copied image as latest'
        )
    }

    stages {
        stage('dockerhub-promote-to-prod') {
            when{
                expression { return "$DOCKER_HUB".toBoolean() }
            }
            steps {
                script {
                    copyContainer(
                        sourceImagePath: "opensearchstaging/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                        destinationImagePath: "opensearchproject/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                        destinationType: "docker",
                        destinationCredentialIdentifier: "jenkins-staging-docker-prod-token"
                    )
                    if("$TAG_LATEST".toBoolean()){
                        echo "Tagging with latest."
                        copyContainer(
                            sourceImagePath: "opensearchstaging/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                            destinationImagePath: "opensearchproject/${IMAGE_REPOSITORY}:latest",
                            destinationType: "docker",
                            destinationCredentialIdentifier: "jenkins-staging-docker-prod-token"
                        )
                    }
                }
            }
        }
        stage('ecr-promote-to-prod') {
            when {
                expression { return "$ECR".toBoolean() }
            }
            steps {
                script {
                    copyContainer(
                        sourceImagePath: "opensearchstaging/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                        destinationImagePath: "public.ecr.aws/p5f6l6i3/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                        destinationType: "ecr",
                        destinationCredentialIdentifier: "public.ecr.aws/p5f6l6i3",
                        accountName: "${AWS_ACCOUNT_ARTIFACT}"
                    )
                    if("$TAG_LATEST".toBoolean()){
                        echo "Tagging with latest."
                        copyContainer(
                            sourceImagePath: "opensearchstaging/${IMAGE_REPOSITORY}:${IMAGE_TAG}",
                            destinationImagePath: "public.ecr.aws/p5f6l6i3/${IMAGE_REPOSITORY}:latest",
                            destinationType: "ecr",
                            destinationCredentialIdentifier: "public.ecr.aws/p5f6l6i3",
                            accountName: "${AWS_ACCOUNT_ARTIFACT}"
                        )
                    }
                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
                sh "docker logout"
            }
        }
    }
}
